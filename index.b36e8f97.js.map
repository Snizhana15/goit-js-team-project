{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BAEMC,EAAUC,SAASC,cAAc,a,SAExBC,I,OAAAC,EAASC,MAAAC,KAAAC,W,SAATH,I,OAAAA,EAAfI,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,I,IAEYC,E,4FAAiB,EAAAC,EAAAC,gB,cAAnBF,EAAQG,EAAAC,KAANJ,O,kBACDA,G,gCAEPK,MAAKF,EAAAG,I,0DALeb,MAAAC,KAAAC,W,SASTY,EAA0BC,G,OAA1BC,EAAyBhB,MAAAC,KAAAC,W,SAAzBc,I,OAAAA,EAAfb,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,EAAyCS,G,IAE7BE,E,4FAAkB,EAAAT,EAAAU,kBAAiBH,G,cAArCE,EAASP,EAAAC,KAAPM,Q,kBACDA,G,gCAEPL,MAAKF,EAAAG,I,0DAL+Bb,MAAAC,KAAAC,W,SASzBiB,I,OAAAA,EAAfhB,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,EAAmCS,G,IAC3BR,EACAa,EAEAC,E,kFAHevB,I,cAAfS,EAAMG,EAAAC,K,SACSG,EAA0BC,G,OAAzCK,EAAMV,EAAAC,KAENU,EAAcD,EACjBE,KAAI,SAAAC,G,OAASC,EAAgBD,EAAOhB,MACpCkB,KAAK,IAER9B,EAAQ+B,UAAY,GACpB/B,EAAQgC,mBAAmB,aAAcN,G,4CATTrB,MAAAC,KAAAC,WAsClC,SAASsB,EAAgBD,EAAOhB,GAC9B,IAAQqB,EACNL,EADMK,UAAWC,EACjBN,EADiBM,eAAgBC,EACjCP,EADiCO,GAAIC,EACrCR,EADqCQ,aAAcC,EACnDT,EADmDS,MAAOC,EAC1DV,EAD0DU,YAGtDC,EA9BR,SAAuBC,EAAQ5B,GAC7B,OAAO4B,EAAOb,KAAI,SAAAQ,G,OAAMvB,EAAO6B,MAAK,SAAAC,G,OAASA,EAAMP,KAAOA,KAAIQ,QA6BvCC,CAAcX,EAAWrB,GAC1CiC,EA3BR,SAAwBjC,GACtB,IAAIiC,EAAe,GAEnB,OAAQjC,EAAOkC,QACb,KAAK,EACHD,EAAe,qCAA+CE,OAAVnC,EAAO,GAAG,SAC9D,MAEF,KAAK,EACHiC,EAAe,qCACqCE,OADAnC,EAAO,GAAG,yEACAmC,OAAVnC,EAAO,GAAG,SAC9D,MAEF,QACEiC,EAAe,qCACqCE,OADAnC,EAAO,GAAG,yEACAmC,OAAVnC,EAAO,GAAG,kFAIlE,OAAOiC,EAQcG,CAAeT,GAC9BU,EAAiB,IAAIC,KAAKd,GAAce,cAAcC,WAE5D,MAAO,iDAKiDL,OAJZZ,EAAG,+JAK1BY,OADmCT,EAAY,4BAM5BS,OALnBb,EAAe,4IAQpBa,OAHwBV,EAAM,sHAKSU,OAFvCF,EAAa,gFAEyCE,OAAfE,EAAe,8C,oBA9DrC7B,GAApBI,EAAmBnB,MAAAC,KAAAC,WChBlC,CAAoB,G","sources":["src/js/render-popular-movies.js","src/index.js"],"sourcesContent":["import { getPopularMovies, getGenreList } from './Api';\n\nconst cardSet = document.querySelector('.card-set');\n\nasync function getGenres() {\n  try {\n    const { genres } = await getGenreList();\n    return genres;\n  } catch (error) {\n    alert(error);\n  }\n}\n\nasync function getDataAboutPopularMovies(pageNumber) {\n  try {\n    const { results } = await getPopularMovies(pageNumber);\n    return results;\n  } catch (error) {\n    alert(error);\n  }\n}\n\nasync function renderPopularMovies(pageNumber) {\n  const genres = await getGenres();\n  const movies = await getDataAboutPopularMovies(pageNumber);\n\n  const cardsMarkup = movies\n    .map(movie => renderMovieCard(movie, genres))\n    .join('');\n\n  cardSet.innerHTML = '';\n  cardSet.insertAdjacentHTML('afterbegin', cardsMarkup);\n}\n\nfunction getGenresById(idList, genres) {\n  return idList.map(id => genres.find(genre => genre.id === id).name);\n}\n\nfunction getGenresMarup(genres) {\n  let genresMarkup = '';\n\n  switch (genres.length) {\n    case 1:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]}</li>`;\n      break;\n\n    case 2:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]}</li>`;\n      break;\n\n    default:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">Інші</li>`;\n  }\n\n  return genresMarkup;\n}\n\nfunction renderMovieCard(movie, genres) {\n  const { genre_ids, original_title, id, release_date, title, poster_path } =\n    movie;\n\n  const alphabetGenres = getGenresById(genre_ids, genres);\n  const genresMarkup = getGenresMarup(alphabetGenres);\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  return `\n        <li class=\"card-set__item\" data-id=\"${id}\">\n            <div class=\"card-set__box-img\">\n            <img\n                loading=\"lazy\"\n                src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n                alt=\"${original_title}\"\n                class=\"card-set__img\"\n                \n            />\n            </div>\n            <h3 class=\"card-set__title\">${title}</h3>\n            <div class=\"card-set__description\">\n            <ul class=\"card-set__genre\">\n                ${genresMarkup}\n            </ul>\n            <span class=\"card-set__genre-movie\">&nbsp| ${productionYear}</span>\n            </div>\n        </li>`;\n}\n\nexport { renderPopularMovies };\n","import { renderPopularMovies } from './js/render-popular-movies';\n\n/*\nПока что, чтобы посмотреть работает ли пагинация достаточно в функцию renderPopularMovies передать номер страницы в качестве параметра, например renderPopularMovies(3)\n*/\n\nrenderPopularMovies(1);\n\n/*\nІмпорт всього файлу modal-film.js\n*/\n\nimport * as things from './js/modal-film';\n"],"names":["$bpxeT","parcelRequire","$a29be838f27344f1$var$cardSet","document","querySelector","$a29be838f27344f1$var$getGenres","$a29be838f27344f1$var$_getGenres","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","genres","$fkvfI","getGenreList","_ctx","sent","alert","t0","$a29be838f27344f1$var$getDataAboutPopularMovies","pageNumber","$a29be838f27344f1$var$_getDataAboutPopularMovies","results","getPopularMovies","$a29be838f27344f1$var$_renderPopularMovies","movies","cardsMarkup","map","movie","$a29be838f27344f1$var$renderMovieCard","join","innerHTML","insertAdjacentHTML","genre_ids","original_title","id","release_date","title","poster_path","alphabetGenres","idList","find","genre","name","$a29be838f27344f1$var$getGenresById","genresMarkup","length","concat","$a29be838f27344f1$var$getGenresMarup","productionYear","Date","getFullYear","toString"],"version":3,"file":"index.b36e8f97.js.map"}