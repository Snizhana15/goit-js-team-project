{"mappings":"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","sources":["src/js/modal-film.js","src/js/Api.js","src/js/change-button-condition.js","src/js/localStorage.js","src/js/modal-students.js","src/js/change-movies-page.js","src/js/render-popular-movies.js"],"sourcesContent":["import { getMovieById } from './Api';\nimport {\n  changeWatchedButtonCondition,\n  changeQueueButtonCondition,\n} from './change-button-condition';\n\nconst refs = {\n  openModalFilm: document.querySelector('.card-set'),\n  closeModalFilm: document.querySelector('.film-card__button-close'),\n  body: document.querySelector('body'),\n  backdropModalFilm: document.querySelector('.backdrop'),\n  modalFilm: document.querySelector('.film-card__box'),\n};\nconst spinModal = document.querySelector('.spinner--modal');\n\nconst onOpenModal = async e => {\n  spinModal.classList.add('spinner');\n  if (!e.target.closest('.card-set__item')) {\n    return;\n  }\n\n  refs.modalFilm.innerHTML = '';\n  refs.backdropModalFilm.classList.remove('visually-hidden');\n  refs.body.style.overflow = 'hidden';\n\n  const getFilmId = e.target.closest('.card-set__item').dataset.id;\n\n  const infoAboutModalFilm = await getMovieById(getFilmId);\n\n  renderModalFilm(infoAboutModalFilm);\n\n  const watchedBtn = document.querySelector('.description-button__watched');\n  const queueBtn = document.querySelector('.description-button__queue');\n  changeWatchedButtonCondition(getFilmId, watchedBtn);\n  changeQueueButtonCondition(getFilmId, queueBtn);\n\n  spinModal.classList.remove('spinner');\n\n  refs.body.addEventListener('keydown', onKeyPress);\n  refs.backdropModalFilm.addEventListener('click', onBackdropClick);\n};\n\nconst renderModalFilm = modalFilm => {\n  const {\n    poster_path,\n    title,\n    id,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = modalFilm;\n\n  const genresList = genres.map(item => item.name).join(', ');\n\n  const markupModalFilm = `<div class=\"film-card__image-block\">\n      <img\n        class=\"film-card__image\"\n        src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n        alt=\"film\"\n      />\n    </div>\n    <div class=\"film-card__description\">\n      <h1 class=\"film-card__description-title\">${title}</h1>\n      <ul class=\"film-card__description-set\">\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Vote / Votes</p>\n          <p class=\"description-set__value\">\n            <span class=\"description-set__rating\">${vote_average}</span>\n            <span class=\"description-set__separator\">/</span>\n            <span class=\"description-set__vote\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Popularity</p>\n          <p class=\"description-set__value\">${popularity}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Original Title</p>\n          <p class=\"description-set__value\">${original_title}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Genre</p>\n          <p class=\"description-set__value\">${genresList}</p>\n        </li>\n      </ul>\n      <div class=\"film-card__description-about\">\n        <h2 class=\"description-about__title\">About</h2>\n        <p class=\"description-about__text\">${overview}</p>\n      </div>\n      <div class=\"film-card__description-button\">\n        <button class=\"description-button description-button__watched\" data-id=\"${id}\">\n          add to Watched\n        </button>\n        <button class=\"description-button description-button__queue\" data-id=\"${id}\">\n          add to queue\n        </button>\n      </div>\n    </div>\n  </div>`;\n\n  refs.modalFilm.insertAdjacentHTML('beforeend', markupModalFilm);\n};\n\nconst onKeyPress = e => {\n  if (e.code === 'Escape') {\n    console.log(e.code);\n    refs.backdropModalFilm.classList.add('visually-hidden');\n    refs.body.style.overflow = 'visible';\n    refs.body.removeEventListener('keydown', onKeyPress);\n  }\n};\n\nconst onBackdropClick = e => {\n  if (e.target.closest('.film-card')) {\n    return;\n  }\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n};\n\nrefs.openModalFilm.addEventListener('click', onOpenModal);\n\nrefs.closeModalFilm.addEventListener('click', () => {\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n});\n","const KEY = 'fadee9dfff8cb6b1bff36771479589d6';\n\n/*\nФункцию getPopularMovies() используем для запроса при рендере карточек популярных фильмов на главной странице.\n*/\n\nexport function getPopularMovies(pageNumber = 1) {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=${pageNumber}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMoviesBySearchQuery(searchQuery) используем для запроса при рендере карточек при поиске по ключевому слову.\nПараметр searchQuery должен быть строкой из input-а поиска.\n*/\n\nexport function getSearchQuery(searchQuery, pageNumber = 1) {\n  const url = 'https://api.themoviedb.org/3';\n  return fetch(\n    `${url}/search/movie?api_key=${KEY}&query=${searchQuery}&language=eng&page=${pageNumber}&include_adult=false`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMovieById(id) используем для запроса при отображении полной информации о фильме (модалка при клике на карточку).\nПараметр id должен быть строкой или числом. \n*/\n\nexport function getMovieById(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=eng`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nЖанры каждого фильма хранятся в виде массива чисел. Кажое число соответствует своему жанру. \nФункция getGenreList() возвращает массив объектов, свойствами которых есть число и соответствующий ему жанр.\nИспользуем при отображении жанров на карточках и модалке.\n*/\n\nexport function getGenreList() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${KEY}&language=eng`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n","const changeWatchedButtonCondition = (filmId, watchedBtn) => {\n  const getWatched = localStorage.getItem('watched');\n  const parsGetWatched = JSON.parse(getWatched);\n\n  if (!parsGetWatched) {\n    return;\n  } else if (parsGetWatched.includes(filmId)) {\n    watchedBtn.textContent = 'in watched';\n    watchedBtn.style.backgroundColor = 'lightgray';\n    watchedBtn.setAttribute('disabled', '');\n  }\n};\n\nconst changeQueueButtonCondition = (filmId, queueBtn) => {\n  const getQueue = localStorage.getItem('queue');\n  const parseGetQueue = JSON.parse(getQueue);\n\n  if (!parseGetQueue) {\n    return;\n  } else if (parseGetQueue.includes(filmId)) {\n    queueBtn.textContent = 'in queue';\n    queueBtn.style.backgroundColor = 'lightgray';\n    queueBtn.setAttribute('disabled', '');\n  }\n};\n\nexport { changeWatchedButtonCondition, changeQueueButtonCondition };\n","const cardBox = document.querySelector('.film-card__box');\ncardBox.addEventListener('click', addWatched);\ncardBox.addEventListener('click', addQueue);\nfunction addWatched(e) {\n  if (!e.target.closest('.description-button__watched')) {\n    return;\n  }\n  const getFilmId = e.target.closest('.description-button__watched').dataset.id;\n  const films = JSON.parse(localStorage.getItem('watched') || '[]');\n  const film = getFilmId;\n  const watchedBtn = e.target.closest('.description-button__watched');\n  if (films.includes(film)) {\n    return;\n  }\n  watchedBtn.textContent = 'in watched';\n  watchedBtn.style.backgroundColor = 'lightgray';\n  watchedBtn.setAttribute('disabled', '');\n  films.push(film);\n  localStorage.setItem('watched', JSON.stringify(films));\n}\nfunction addQueue(e) {\n  if (!e.target.closest('.description-button__queue')) {\n    return;\n  }\n  const getFilmId = e.target.closest('.description-button__queue').dataset.id;\n  const films = JSON.parse(localStorage.getItem('queue') || '[]');\n  const film = getFilmId;\n  const queueBtn = e.target.closest('.description-button__queue');\n  if (films.includes(film)) {\n    return;\n  }\n  queueBtn.textContent = 'in queue';\n  queueBtn.style.backgroundColor = 'lightgray';\n  queueBtn.setAttribute('disabled', '');\n  films.push(film);\n  localStorage.setItem('queue', JSON.stringify(films));\n}\n","\n    const refs = {\n      openModalBtn: document.querySelector('[data-modal-opens]'),\n      modal: document.querySelector('[data-modals]'),\n      body: document.querySelector('body'),\n    };\n    function toggleModal() {\n      refs.modal.classList.remove('is-hiddens');\n      document.body.classList.add(\"modal-open\");\n      function onKeyPress(event) {\n        if (event.code === 'Escape') {\n          refs.modal.classList.add('is-hiddens');\n          document.body.classList.remove(\"modal-open\");\n          refs.body.removeEventListener('keyup', onKeyPress);\n        }\n      }\n      function onGalleryClick(event) {\n        if (event.target.closest('.modals')) return;\n        refs.modal.classList.add('is-hiddens');\n          document.body.classList.remove(\"modal-open\");\n        refs.modal.removeEventListener('click', onGalleryClick);\n      }\n      refs.body.addEventListener('keyup', onKeyPress);\n      refs.modal.addEventListener('click', onGalleryClick);\n    }\n    refs.openModalBtn.addEventListener('click', toggleModal);","let pageNumber = 1;\n\nconst backwardBtn = document.querySelector('[data-move=\"backward\"]');\nconst forwardBtn = document.querySelector('[data-move=\"forward\"]');\nconst pageNumberList = document.querySelector('.number-page');\nconst cardSet = document.querySelector('.card-set');\n\n/*\n  Функция changeMoviesPage принимает в качестве первого аргумента общее количество страниц, доступных для пагинации, а в качестве второго - функцию для рендера карточек фильмов.\n*/\n\nfunction changeMoviesPage(totalPages, renderMovies) {\n  renderStartPageNumberList(totalPages);\n\n  backwardBtn.addEventListener('click', onBackwardBtnClick);\n  forwardBtn.addEventListener('click', onForwardBtnClick);\n  pageNumberList.addEventListener('click', onPageNumberClick);\n\n  function onForwardBtnClick() {\n    pageNumber += 1;\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    activateBtn(backwardBtn);\n    if (pageNumber === totalPages) {\n      deactivateBtn(forwardBtn);\n    }\n\n    if (pageNumber < 4) {\n      changeCurrentBtnOnStart();\n      return;\n    }\n\n    if (pageNumber > totalPages - 3) {\n      hideLastPageNumberListElement();\n      changeCurrentBtnOnEnd();\n    }\n\n    if (pageNumber >= 4 && pageNumber <= totalPages - 2) {\n      showFirstPageNumberListElement();\n      setNewBtnPageNumbers();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function onBackwardBtnClick() {\n    pageNumber -= 1;\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    activateBtn(forwardBtn);\n    if (pageNumber === 1) {\n      deactivateBtn(backwardBtn);\n    }\n\n    if (pageNumber > totalPages - 3) {\n      changeCurrentBtnOnEnd();\n      return;\n    }\n\n    if (pageNumber < 4) {\n      hideFirstPageNumberListElement();\n      changeCurrentBtnOnStart();\n    }\n\n    if (pageNumber >= 3 && pageNumber <= totalPages - 3) {\n      showLastPageNumberListElement();\n      setNewBtnPageNumbers();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function onPageNumberClick(e) {\n    if (e.target.nodeName !== 'BUTTON') {\n      return;\n    }\n\n    if (e.target.classList.contains('number-page__btn--current')) {\n      return;\n    }\n\n    pageNumber = Number(e.target.textContent);\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    if (pageNumber === 1) {\n      removeCurrentBtnClass();\n      renderStartPageNumberList();\n      return;\n    }\n\n    if (pageNumber === totalPages) {\n      removeCurrentBtnClass();\n      renderEndPageNumberList();\n      return;\n    }\n\n    if (pageNumber >= 4 && pageNumber <= totalPages - 3) {\n      removeCurrentBtnClass();\n      pageNumberList.children[3].firstElementChild.classList.add(\n        'number-page__btn--current'\n      );\n\n      showFirstPageNumberListElement();\n      showLastPageNumberListElement();\n\n      activateBtn(forwardBtn);\n      activateBtn(backwardBtn);\n\n      setNewBtnPageNumbers();\n    }\n\n    if (pageNumber < 4) {\n      changeCurrentBtnOnStart();\n\n      hideFirstPageNumberListElement();\n      if (totalPages > 5) {\n        showLastPageNumberListElement();\n      }\n\n      activateBtn(forwardBtn);\n\n      setNewBtnPageNumbersOnStart();\n      return;\n    }\n\n    if (pageNumber > totalPages - 3) {\n      changeCurrentBtnOnEnd();\n\n      hideLastPageNumberListElement();\n      if (totalPages > 5) {\n        showFirstPageNumberListElement();\n      }\n\n      activateBtn(forwardBtn);\n      activateBtn(backwardBtn);\n\n      setNewBtnPageNumbersOnEnd();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function activateBtn(btnLink) {\n    btnLink.removeAttribute('disabled');\n    btnLink.classList.remove('movies-navigation__arrow-btn--disabled');\n  }\n\n  function deactivateBtn(btnLink) {\n    btnLink.setAttribute('disabled', '');\n    btnLink.classList.add('movies-navigation__arrow-btn--disabled');\n  }\n\n  function renderStartPageNumberList() {\n    if (totalPages < 6) {\n      renderSmallPageNumberList();\n      return;\n    }\n\n    hideFirstPageNumberListElement();\n    showLastPageNumberListElement();\n\n    pageNumberList.children[1].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n    pageNumberList.lastElementChild.firstElementChild.textContent =\n      String(totalPages);\n\n    deactivateBtn(backwardBtn);\n    activateBtn(forwardBtn);\n\n    setNewBtnPageNumbersOnStart();\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function renderEndPageNumberList() {\n    hideLastPageNumberListElement();\n    if (totalPages > 5) {\n      showFirstPageNumberListElement();\n    }\n\n    pageNumberList.children[\n      totalPages >= 5 ? 5 : totalPages\n    ].firstElementChild.classList.add('number-page__btn--current');\n\n    activateBtn(backwardBtn);\n    deactivateBtn(forwardBtn);\n\n    if (totalPages <= 5) {\n      setNewBtnPageNumbersOnStart();\n      return;\n    }\n    setNewBtnPageNumbersOnEnd();\n  }\n\n  function removeCurrentBtnClass() {\n    const currentBtn = document.querySelector('.number-page__btn--current');\n    currentBtn.classList.remove('number-page__btn--current');\n  }\n\n  function changeCurrentBtnOnStart() {\n    removeCurrentBtnClass();\n    pageNumberList.children[pageNumber].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n  }\n\n  function changeCurrentBtnOnEnd() {\n    removeCurrentBtnClass();\n    pageNumberList.children[\n      pageNumber - totalPages + 5\n    ].firstElementChild.classList.add('number-page__btn--current');\n  }\n\n  function renderSmallPageNumberList() {\n    hideArrowBtns();\n    renderSmallPageNumberListMarkup();\n\n    hideFirstPageNumberListElement();\n    hideLastPageNumberListElement();\n\n    pageNumberList.children[1].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n  }\n\n  function hideLastPageNumberListElement() {\n    pageNumberList.lastElementChild.style.display = 'none';\n    pageNumberList.children[\n      pageNumberList.children.length - 2\n    ].style.marginRight = '0px';\n  }\n\n  function hideFirstPageNumberListElement() {\n    pageNumberList.firstElementChild.style.display = 'none';\n  }\n\n  function showFirstPageNumberListElement() {\n    pageNumberList.firstElementChild.style.display = 'list-item';\n  }\n\n  function showLastPageNumberListElement() {\n    pageNumberList.lastElementChild.style.display = 'list-item';\n    pageNumberList.children[\n      pageNumberList.children.length - 2\n    ].style.marginRight = '16px';\n  }\n\n  function setNewBtnPageNumbers() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = pageNumber - 3 + i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function setNewBtnPageNumbersOnStart() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function setNewBtnPageNumbersOnEnd() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = totalPages - 5 + i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function renderSmallPageNumberListMarkup() {\n    let markup = '';\n    pageNumberList.innerHTML = '';\n    for (let i = 0; i < totalPages + 2; i += 1) {\n      markup += `<li class=\"number-page__item\">\n                <button type=\"button\" class=\"number-page__btn\">${i}</button>\n              </li>`;\n    }\n    pageNumberList.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  function hideArrowBtns() {\n    forwardBtn.style.display = 'none';\n    backwardBtn.style.display = 'none';\n  }\n\n  function hideStartAndEndPageNumbersForMobile() {\n    if (window.innerWidth < 768) {\n      hideFirstPageNumberListElement();\n      hideLastPageNumberListElement();\n    }\n  }\n}\n\nexport { changeMoviesPage };\n","import { getPopularMovies, getGenreList } from './Api';\n\nconst cardSet = document.querySelector('.card-set');\nconst spinner = document.getElementById('spinner');\n\nasync function getGenres() {\n  try {\n    const { genres } = await getGenreList();\n    return genres;\n  } catch (error) {\n    alert(error);\n  }\n}\n\nasync function getDataAboutPopularMovies(pageNumber) {\n  try {\n    const { results: movies, total_pages: totalPages } = await getPopularMovies(\n      pageNumber\n    );\n    return { movies, totalPages };\n  } catch (error) {\n    alert(error);\n  }\n}\n\nasync function renderPopularMovies(pageNumber) {\n  spinner.classList.add('spinner');\n  const genres = await getGenres();\n  const { movies, totalPages } = await getDataAboutPopularMovies(pageNumber);\n\n  const cardsMarkup = movies\n    .map(movie => renderMovieCard(movie, genres))\n    .join('');\n\n  cardSet.innerHTML = '';\n  cardSet.insertAdjacentHTML('afterbegin', cardsMarkup);\n  spinner.classList.remove('spinner');\n  return totalPages;\n}\n\nfunction getGenresById(idList, genres) {\n  return idList.map(id => genres.find(genre => genre.id === id).name);\n}\n\nfunction getGenresMarkup(genres) {\n  let genresMarkup = '';\n\n  switch (genres.length) {\n    case 1:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]}</li>`;\n      break;\n\n    case 2:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]}</li>`;\n      break;\n\n    case 3:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[2]}</li>`;\n      break;\n\n    default:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">Other</li>`;\n  }\n\n  return genresMarkup;\n}\n\nfunction renderMovieCard(movie, genres) {\n  const { genre_ids, original_title, id, release_date, title, poster_path } =\n    movie;\n\n  const alphabetGenres = getGenresById(genre_ids, genres);\n  const genresMarkup = getGenresMarkup(alphabetGenres);\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  return `\n        <li class=\"card-set__item\" data-id=\"${id}\">\n            <div class=\"card-set__box-img\">\n            <img\n                loading=\"lazy\"\n                src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n                alt=\"${original_title}\"\n                class=\"card-set__img\"\n                \n            />\n            </div>\n            <h3 class=\"card-set__title\">${title}</h3>\n            <div class=\"card-set__description\">\n            <ul class=\"card-set__genre\">\n                ${genresMarkup}\n            </ul>\n            <span class=\"card-set__genre-movie\">&nbsp| ${productionYear}</span>\n            </div>\n        </li>`;\n}\n\nexport { renderPopularMovies, getGenresMarkup };\n"],"names":["$epB3k","parcelRequire","$b89ac968f8ae7162$var$refs","openModalFilm","document","querySelector","closeModalFilm","body","backdropModalFilm","modalFilm","$b89ac968f8ae7162$var$spinModal","$b89ac968f8ae7162$var$renderModalFilm","poster_path","title","id","vote_average","vote_count","popularity","original_title","genres","overview","markupModalFilm","map","item","name","join","insertAdjacentHTML","$b89ac968f8ae7162$var$onKeyPress","e","code","console","log","classList","add","style","overflow","removeEventListener","$b89ac968f8ae7162$var$onBackdropClick","target","closest","addEventListener","async","innerHTML","remove","getFilmId","dataset","infoAboutModalFilm","getMovieById","watchedBtn","queueBtn","$fHPRY","changeWatchedButtonCondition","changeQueueButtonCondition","$a7e0245fb0110520$var$KEY","$a7e0245fb0110520$export$76bd8a7b840a3729","pageNumber","fetch","then","response","json","data","_success","success","Error","status_message","$a7e0245fb0110520$export$1664b92369554829","searchQuery","$a7e0245fb0110520$export$e05fa48ccab9af8","$a7e0245fb0110520$export$321e906c11f8df73","$b6f31b61c48869a0$export$a1c83784b50cc96","filmId","getWatched","localStorage","getItem","parsGetWatched","JSON","parse","includes","textContent","backgroundColor","setAttribute","$b6f31b61c48869a0$export$f5b843a319935072","getQueue","parseGetQueue","$2338c8cd734f85a6$var$cardBox","films","film","push","setItem","stringify","$8e415dd749dd7be8$var$refs","openModalBtn","modal","onKeyPress","event","onGalleryClick","$1c72f1042fbd7648$var$pageNumber","$1c72f1042fbd7648$var$backwardBtn","$1c72f1042fbd7648$var$forwardBtn","$1c72f1042fbd7648$var$pageNumberList","$1c72f1042fbd7648$var$cardSet","$1c72f1042fbd7648$export$d91c9980e9a24ec2","totalPages","renderMovies","activateBtn","btnLink","removeAttribute","deactivateBtn","renderStartPageNumberList","display","markup","i","renderSmallPageNumberListMarkup","hideFirstPageNumberListElement","hideLastPageNumberListElement","children","firstElementChild","showLastPageNumberListElement","lastElementChild","String","setNewBtnPageNumbersOnStart","hideStartAndEndPageNumbersForMobile","removeCurrentBtnClass","changeCurrentBtnOnStart","changeCurrentBtnOnEnd","length","marginRight","showFirstPageNumberListElement","setNewBtnPageNumbers","newPageNumber","toString","setNewBtnPageNumbersOnEnd","window","innerWidth","scrollIntoView","nodeName","contains","Number","renderEndPageNumberList","$696ffb40b89ad88b$var$cardSet","$696ffb40b89ad88b$var$spinner","getElementById","$696ffb40b89ad88b$export$12335c527465096d","getGenreList","error","alert","$696ffb40b89ad88b$var$getGenres","movies","results","total_pages","getPopularMovies","$696ffb40b89ad88b$var$getDataAboutPopularMovies","cardsMarkup","movie","genre_ids","release_date","genresMarkup","$696ffb40b89ad88b$export$8d9a840d23167eac","idList","find","genre","$696ffb40b89ad88b$var$getGenresById","productionYear","Date","getFullYear","$696ffb40b89ad88b$var$renderMovieCard"],"version":3,"file":"library.3e91b7d6.js.map"}