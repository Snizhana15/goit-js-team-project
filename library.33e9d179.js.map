{"mappings":"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","sources":["src/library.js","src/js/render-library.js"],"sourcesContent":["import * as things from './js/modal-film';\nimport * as elements from './js/localStorage';\nimport * as things from './js/change-button-condition';\nimport * as elem from './js/modal-students';\nimport { showLibraryPage, downloadLibraryPage } from './js/render-library';\n\ndownloadLibraryPage(showLibraryPage);\n","import { getMovieById } from './Api';\nimport { getGenresMarkup } from './render-popular-movies';\n\nconst refs = {\n  cardSet: document.querySelector('.card-set'),\n  showWatchedBtn: document.querySelector('.header-library__button--watched'),\n  showQueueBtn: document.querySelector('.header-library__button--queue'),\n  paginationSet: document.querySelector('.pagination'),\n};\n\nconst watchedSpinner = document.querySelector(\n  '.header-library--watched--spinner'\n);\nconst queueSpinner = document.querySelector('.header-library--queue--spinner');\n\nlet pageCount = 0;\nconst moviesbyPage = 10;\n\nconst getWatchedList = () => {\n  const parsedWatchedMovies = JSON.parse(\n    localStorage.getItem('watched') || '[]'\n  );\n  return parsedWatchedMovies;\n};\n\nconst getQueueList = () => {\n  const parsedQueueMovies = JSON.parse(localStorage.getItem('queue') || '[]');\n  return parsedQueueMovies;\n};\n\nconst getLibraryList = () => {\n  const parsedWatchedMovies = JSON.parse(\n    localStorage.getItem('watched') || '[]'\n  );\n\n  const parsedQueueMovies = JSON.parse(localStorage.getItem('queue') || '[]');\n\n  const parsedAllMoeviesList = [...parsedWatchedMovies, ...parsedQueueMovies];\n  const parsedUniqueMoeviesList = parsedAllMoeviesList.filter(\n    (value, index, arr) => arr.indexOf(value) === index\n  );\n  return parsedUniqueMoeviesList;\n};\n\nconst onShowWatched = () => {\n  watchedSpinner.classList.add('spinner');\n\n  refs.paginationSet.removeEventListener('click', onClickLibrary);\n  refs.paginationSet.removeEventListener('click', onClickQueue);\n\n  const watchedList = getWatchedList();\n\n  const startPageWatched = watchedList.slice(0, moviesbyPage);\n  refs.cardSet.innerHTML = '';\n\n  getCountPages(watchedList);\n  renderWatched(startPageWatched);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickWatched);\n};\n\nconst onShowQueue = () => {\n  queueSpinner.classList.add('spinner');\n\n  refs.paginationSet.removeEventListener('click', onClickLibrary);\n  refs.paginationSet.removeEventListener('click', onClickWatched);\n\n  const queueList = getQueueList();\n  const startPageQueue = queueList.slice(0, moviesbyPage);\n\n  refs.cardSet.innerHTML = '';\n\n  getCountPages(queueList);\n  renderWatched(startPageQueue);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickQueue);\n};\n\nconst showLibraryPage = () => {\n  refs.paginationSet.removeEventListener('click', onClickWatched);\n  refs.paginationSet.removeEventListener('click', onClickQueue);\n\n  const libraryList = getLibraryList();\n\n  const startPageLibrary = libraryList.slice(0, moviesbyPage);\n  refs.cardSet.innerHTML = '';\n\n  getCountPages(libraryList);\n  renderWatched(startPageLibrary);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickLibrary);\n};\n\nconst renderWatched = async parsedMovieFromStorage => {\n  const getMovies = await parsedMovieFromStorage.map(moevieId =>\n    getMovieById(moevieId).then(response => renderLibrary(response))\n  );\n};\n\nconst getLibraryGenresById = (idList, genres) => {\n  return idList.map(id => genres.find(genre => genre.id === id).name);\n};\n\nconst renderLibrary = movies => {\n  const {\n    id,\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    genres,\n    vote_average,\n  } = movies;\n\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  const idList = genres.map(i => (i = i.id));\n\n  const alphabetGenres = getLibraryGenresById(idList, genres);\n\n  const genresMarkup = getGenresMarkup(alphabetGenres);\n\n  const markup = `<li class=\"card-set__item\" data-id=\"${id}\">\n                <div class=\"card-set__box-img\"\">\n                <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${original_title}\"\n                class=\"card-set__img\"\n                />\n                </div>\n                <h3 class=\"card-set__title\">${title}</h3>\n                <div class=\"card-set__description\">\n                <ul class=\"card-set__genre\">\n                    ${genresMarkup}\n                </ul>\n                    <span class=\"card-set__production-year\">&nbsp| ${productionYear}&nbsp</span>\n                    <span class=\"card-set__rating\">${vote_average}</span>\n                </div>\n                </li>`;\n\n  refs.cardSet.insertAdjacentHTML('afterbegin', markup);\n  watchedSpinner.classList.remove('spinner');\n  queueSpinner.classList.remove('spinner');\n};\n\nconst getCountPages = arr => {\n  pageCount = Math.ceil(arr.length / moviesbyPage);\n};\n\nconst downloadLibraryPage = showLibraryPage => {\n  showLibraryPage();\n};\n\nrefs.showWatchedBtn.addEventListener('click', onShowWatched);\nrefs.showQueueBtn.addEventListener('click', onShowQueue);\n\nconst renderByPage = (a, arrayAllMoviesForRender) => {\n  const startPositionForRender = a * moviesbyPage - moviesbyPage;\n\n  const arrayMoviesByPage = arrayAllMoviesForRender.splice(\n    startPositionForRender,\n    moviesbyPage\n  );\n\n  refs.cardSet.innerHTML = '';\n  renderWatched(arrayMoviesByPage);\n  markupNumPage(pageCount);\n};\n\nconst onClickWatched = e => {\n  const watched = getWatchedList();\n\n  getNumberPage = Number(e.target.closest('.pagination__button').id);\n\n  renderByPage(getNumberPage, watched);\n};\n\nconst onClickQueue = e => {\n  const queue = getQueueList();\n\n  getNumberPage = Number(e.target.closest('.pagination__button').id);\n\n  renderByPage(getNumberPage, queue);\n};\n\nconst onClickLibrary = e => {\n  const library = getLibraryList();\n\n  getNumberPage = Number(e.target.closest('.pagination__button').id);\n  btn = e.target.closest('.pagination__button');\n  console.log(btn);\n  btn.classList.add('pagination__button--current');\n\n  renderByPage(getNumberPage, library);\n};\n\n//====================render pagination for library============\n\nconst markupNumPage = pageCount => {\n  markupEmpty = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    const page = `<li class=\"pagination__item\">\n        <button class=\"pagination__button\" id=\"${i}\">${i}</button>\n      </li>`;\n\n    markupEmpty.push(page);\n  }\n\n  const markup = markupEmpty.join('');\n\n  refs.paginationSet.innerHTML = '';\n  refs.paginationSet.insertAdjacentHTML('afterbegin', markup);\n};\n//==========================================\n\nexport { showLibraryPage, downloadLibraryPage };\n"],"names":["parcelRequire","$bpxeT","$9c5a8c3a213c0f0b$var$refs","cardSet","document","querySelector","showWatchedBtn","showQueueBtn","paginationSet","$9c5a8c3a213c0f0b$var$watchedSpinner","$9c5a8c3a213c0f0b$var$queueSpinner","$9c5a8c3a213c0f0b$var$pageCount","$9c5a8c3a213c0f0b$var$moviesbyPage","$9c5a8c3a213c0f0b$var$getWatchedList","JSON","parse","localStorage","getItem","$9c5a8c3a213c0f0b$var$getQueueList","$9c5a8c3a213c0f0b$var$getLibraryList","parsedWatchedMovies","parsedQueueMovies","$parcel$interopDefault","$8nrFW","concat","filter","value","index","arr","indexOf","$9c5a8c3a213c0f0b$var$renderWatched","$2TvXO","mark","_callee","parsedMovieFromStorage","map","moevieId","$fkvfI","getMovieById","then","response","$9c5a8c3a213c0f0b$var$renderLibrary","_ctx","sent","movies","id","poster_path","original_title","title","release_date","genres","vote_average","productionYear","Date","getFullYear","toString","alphabetGenres","idList","find","genre","name","$9c5a8c3a213c0f0b$var$getLibraryGenresById","i","genresMarkup","$dXyXQ","getGenresMarkup","markup","insertAdjacentHTML","classList","remove","$9c5a8c3a213c0f0b$var$getCountPages","Math","ceil","length","addEventListener","add","removeEventListener","$9c5a8c3a213c0f0b$var$onClickLibrary","$9c5a8c3a213c0f0b$var$onClickQueue","watchedList","startPageWatched","slice","innerHTML","$9c5a8c3a213c0f0b$var$markupNumPage","$9c5a8c3a213c0f0b$var$onClickWatched","queueList","startPageQueue","$9c5a8c3a213c0f0b$var$renderByPage","a","arrayAllMoviesForRender","startPositionForRender","arrayMoviesByPage","splice","e","watched","getNumberPage","Number","target","closest","queue","library","btn","console","log","pageCount1","markupEmpty","page","push","join","libraryList","startPageLibrary","showLibraryPage1"],"version":3,"file":"library.33e9d179.js.map"}