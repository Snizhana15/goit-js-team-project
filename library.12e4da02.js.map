{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/modal-film.js","src/js/Api.js","src/js/change-button-condition.js","src/js/localStorage.js","src/js/modal-students.js","src/js/render-popular-movies.js","node_modules/@parcel/runtime-js/lib/runtime-f3e67b2b70a377e8.js","node_modules/@parcel/runtime-js/lib/runtime-d37f67e512fb37a7.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import { getMovieById } from './Api';\nimport {\n  changeWatchedButtonCondition,\n  changeQueueButtonCondition,\n} from './change-button-condition';\nimport { addToLocalStorage } from './localStorage';\nimport {\n  changeQueueButtonCondition,\n  changeWatchedButtonCondition,\n} from './change-button-condition';\n\nconst refs = {\n  openModalFilm: document.querySelector('.card-set'),\n  closeModalFilm: document.querySelector('.film-card__button-close'),\n  body: document.querySelector('body'),\n  backdropModalFilm: document.querySelector('.backdrop'),\n  modalFilm: document.querySelector('.film-card__box'),\n};\nconst spinModal = document.querySelector('.spinner--modal');\n\nconst onOpenModal = async e => {\n  spinModal.classList.add('spinner');\n  if (!e.target.closest('.card-set__item')) {\n    return;\n  }\n\n  refs.modalFilm.innerHTML = '';\n  refs.backdropModalFilm.classList.remove('visually-hidden');\n  refs.body.style.overflow = 'hidden';\n\n  const getFilmId = e.target.closest('.card-set__item').dataset.id;\n\n  let infoAboutModalFilm = null;\n  const presenceInWatched = localStorage.getItem('watched')\n    ? JSON.parse(localStorage.getItem('watched')).find(\n        ({ id }) => id === Number(getFilmId)\n      )\n    : false;\n  const presenceInQueue = localStorage.getItem('queue')\n    ? JSON.parse(localStorage.getItem('queue')).find(\n        ({ id }) => id === Number(getFilmId)\n      )\n    : false;\n\n  if (!presenceInWatched && !presenceInQueue)\n    infoAboutModalFilm = await getMovieById(getFilmId);\n\n  if (presenceInWatched) {\n    infoAboutModalFilm = presenceInWatched;\n  }\n\n  if (presenceInQueue) {\n    infoAboutModalFilm = presenceInQueue;\n  }\n\n  renderModalFilm(infoAboutModalFilm);\n  addToLocalStorage(infoAboutModalFilm);\n\n  const watchedBtn = document.querySelector('.description-button__watched');\n  const queueBtn = document.querySelector('.description-button__queue');\n\n  changeWatchedButtonCondition(getFilmId, watchedBtn);\n  changeQueueButtonCondition(getFilmId, queueBtn);\n\n  spinModal.classList.remove('spinner');\n\n  refs.body.addEventListener('keydown', onKeyPress);\n  refs.backdropModalFilm.addEventListener('click', onBackdropClick);\n};\n\nconst renderModalFilm = modalFilm => {\n  const {\n    poster_path,\n    title,\n    id,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = modalFilm;\n\n  const genresList = genres.map(item => item.name).join(', ');\n\n  const markupModalFilm = `<div class=\"film-card__image-block\">\n      <img\n        class=\"film-card__image\"\n        src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n        alt=\"film\"\n      />\n    </div>\n    <div class=\"film-card__description\">\n      <h1 class=\"film-card__description-title\">${title}</h1>\n      <ul class=\"film-card__description-set\">\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Vote / Votes</p>\n          <p class=\"description-set__value\">\n            <span class=\"description-set__rating\">${vote_average}</span>\n            <span class=\"description-set__separator\">/</span>\n            <span class=\"description-set__vote\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Popularity</p>\n          <p class=\"description-set__value\">${popularity}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Original Title</p>\n          <p class=\"description-set__value\">${original_title}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Genre</p>\n          <p class=\"description-set__value\">${genresList}</p>\n        </li>\n      </ul>\n      <div class=\"film-card__description-about\">\n        <h2 class=\"description-about__title\">About</h2>\n        <p class=\"description-about__text\">${overview}</p>\n      </div>\n      <div class=\"film-card__description-button\">\n        <button class=\"description-button description-button__watched\" data-id=\"${id}\">\n          add to Watched\n        </button>\n        <button class=\"description-button description-button__queue\" data-id=\"${id}\">\n          add to queue\n        </button>\n      </div>\n    </div>\n  </div>`;\n\n  refs.modalFilm.insertAdjacentHTML('beforeend', markupModalFilm);\n};\n\nconst onKeyPress = e => {\n  if (e.code === 'Escape') {\n    console.log(e.code);\n    refs.backdropModalFilm.classList.add('visually-hidden');\n    refs.body.style.overflow = 'visible';\n    refs.body.removeEventListener('keydown', onKeyPress);\n  }\n};\n\nconst onBackdropClick = e => {\n  if (e.target.closest('.film-card')) {\n    return;\n  }\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n};\n\nrefs.openModalFilm.addEventListener('click', onOpenModal);\n\nrefs.closeModalFilm.addEventListener('click', () => {\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n});\n","const KEY = 'fadee9dfff8cb6b1bff36771479589d6';\n\n/*\nФункцию getPopularMovies() используем для запроса при рендере карточек популярных фильмов на главной странице.\n*/\n\nexport function getPopularMovies(pageNumber = 1) {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=${pageNumber}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMoviesBySearchQuery(searchQuery) используем для запроса при рендере карточек при поиске по ключевому слову.\nПараметр searchQuery должен быть строкой из input-а поиска.\n*/\n\nexport function getSearchQuery(searchQuery, pageNumber = 1) {\n  const url = 'https://api.themoviedb.org/3';\n  return fetch(\n    `${url}/search/movie?api_key=${KEY}&query=${searchQuery}&language=eng&page=${pageNumber}&include_adult=false`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMovieById(id) используем для запроса при отображении полной информации о фильме (модалка при клике на карточку).\nПараметр id должен быть строкой или числом. \n*/\n\nexport function getMovieById(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=eng`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nЖанры каждого фильма хранятся в виде массива чисел. Кажое число соответствует своему жанру. \nФункция getGenreList() возвращает массив объектов, свойствами которых есть число и соответствующий ему жанр.\nИспользуем при отображении жанров на карточках и модалке.\n*/\n\nexport function getGenreList() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${KEY}&language=eng`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n","const changeWatchedButtonCondition = (filmId, watchedBtn) => {\n  const getWatched = localStorage.getItem('watched');\n  const parsGetWatched = JSON.parse(getWatched);\n\n  if (\n    parsGetWatched &&\n    parsGetWatched.find(({ id }) => id === Number(filmId))\n  ) {\n    watchedBtn.textContent = 'remove from watched';\n  }\n};\n\nconst changeQueueButtonCondition = (filmId, queueBtn) => {\n  const getQueue = localStorage.getItem('queue');\n  const parseGetQueue = JSON.parse(getQueue);\n\n  if (parseGetQueue && parseGetQueue.find(({ id }) => id === Number(filmId))) {\n    queueBtn.textContent = 'remove from queue';\n  }\n};\n\nexport { changeWatchedButtonCondition, changeQueueButtonCondition };\n","function addToLocalStorage(film) {\n  const watchedBtn = document.querySelector('.description-button__watched');\n  const queueBtn = document.querySelector('.description-button__queue');\n\n  const presenceInWatched = localStorage.getItem('watched')\n    ? JSON.parse(localStorage.getItem('watched')).find(\n        ({ id }) => id === film.id\n      )\n    : false;\n  const presenceInQueue = localStorage.getItem('queue')\n    ? JSON.parse(localStorage.getItem('queue')).find(({ id }) => id === film.id)\n    : false;\n\n  if (!presenceInWatched) {\n    watchedBtn.addEventListener('click', addWatched);\n  } else {\n    watchedBtn.addEventListener('click', removeWatched);\n  }\n\n  if (!presenceInQueue) {\n    queueBtn.addEventListener('click', addQueue);\n  } else {\n    queueBtn.addEventListener('click', removeQueue);\n  }\n\n  function addWatched(e) {\n    if (e.target.textContent === 'remove from queue') {\n      return;\n    }\n\n    if (!localStorage.getItem('watched')) {\n      localStorage.setItem('watched', JSON.stringify([film]));\n    } else {\n      const getMovies = JSON.parse(localStorage.getItem('watched'));\n      localStorage.setItem('watched', JSON.stringify([...getMovies, film]));\n    }\n\n    watchedBtn.textContent = 'remove from watched';\n    watchedBtn.removeEventListener('click', addWatched);\n    watchedBtn.addEventListener('click', removeWatched);\n  }\n\n  function addQueue(e) {\n    if (e.target.textContent === 'remove from queue') {\n      return;\n    }\n\n    if (!localStorage.getItem('queue')) {\n      localStorage.setItem('queue', JSON.stringify([film]));\n    } else {\n      const getMovies = JSON.parse(localStorage.getItem('queue'));\n      localStorage.setItem('queue', JSON.stringify([...getMovies, film]));\n    }\n\n    queueBtn.textContent = 'remove from queue';\n    queueBtn.removeEventListener('click', addQueue);\n    queueBtn.addEventListener('click', removeQueue);\n  }\n\n  function removeWatched(e) {\n    if (e.target.textContent === 'add to watched') {\n      return;\n    }\n\n    const currentMovies = JSON.parse(localStorage.getItem('watched'));\n    const filteredMovies = currentMovies.filter(({ id }) => id !== film.id);\n    localStorage.setItem('watched', JSON.stringify(filteredMovies));\n\n    watchedBtn.textContent = 'add to watched';\n    watchedBtn.removeEventListener('click', removeWatched);\n    watchedBtn.addEventListener('click', addWatched);\n  }\n\n  function removeQueue(e) {\n    if (e.target.textContent === 'add to queue') {\n      return;\n    }\n\n    const currentMovies = JSON.parse(localStorage.getItem('queue'));\n    const filteredMovies = currentMovies.filter(({ id }) => id !== film.id);\n    localStorage.setItem('queue', JSON.stringify(filteredMovies));\n\n    queueBtn.textContent = 'add to queue';\n    queueBtn.removeEventListener('click', removeQueue);\n    queueBtn.addEventListener('click', addQueue);\n  }\n}\n\nexport { addToLocalStorage };\n","const refs = {\n  openModalHeart: document.querySelector('.heart'),\n  openModalBtn: document.querySelector('[data-modal-opens]'),\n  modal: document.querySelector('[data-modals]'),\n  body: document.querySelector('body'),\n};\nfunction toggleModal() {\n  refs.modal.classList.remove('is-hiddens');\n  document.body.classList.add('modal-open');\n  function onKeyPress(event) {\n    if (event.code === 'Escape') {\n      refs.modal.classList.add('is-hiddens');\n      document.body.classList.remove('modal-open');\n      refs.body.removeEventListener('keyup', onKeyPress);\n    }\n  }\n  function onGalleryClick(event) {\n    if (event.target.closest('.modals')) return;\n    refs.modal.classList.add('is-hiddens');\n    document.body.classList.remove('modal-open');\n    refs.modal.removeEventListener('click', onGalleryClick);\n  }\n  refs.body.addEventListener('keyup', onKeyPress);\n  refs.modal.addEventListener('click', onGalleryClick);\n}\nrefs.openModalBtn.addEventListener('click', toggleModal);\nrefs.openModalHeart.addEventListener('click', toggleModal);\n","import { getPopularMovies, getGenreList } from './Api';\nimport * as image from '../images/movie.jpg';\n\nconst cardSet = document.querySelector('.card-set');\nconst spinner = document.getElementById('spinner');\n\nasync function getGenres() {\n  try {\n    const { genres } = await getGenreList();\n    return genres;\n  } catch (error) {\n    alert(error);\n  }\n}\n\nasync function getDataAboutPopularMovies(pageNumber) {\n  try {\n    const { results: movies, total_pages: totalPages } = await getPopularMovies(\n      pageNumber\n    );\n    return { movies, totalPages };\n  } catch (error) {\n    alert(error);\n  }\n}\n\nasync function renderPopularMovies(pageNumber) {\n  let genres = null;\n\n  spinner.classList.add('spinner');\n\n  if (!localStorage.getItem('genres')) {\n    genres = await getGenres();\n    localStorage.setItem('genres', JSON.stringify(genres));\n  } else {\n    genres = JSON.parse(localStorage.getItem('genres'));\n  }\n\n  const { movies, totalPages } = await getDataAboutPopularMovies(pageNumber);\n\n  const cardsMarkup = movies\n    .map(movie => renderMovieCard(movie, genres))\n    .join('');\n\n  cardSet.innerHTML = '';\n  cardSet.insertAdjacentHTML('afterbegin', cardsMarkup);\n  spinner.classList.remove('spinner');\n  return totalPages;\n}\n\nfunction getGenresById(idList, genres) {\n  return idList.map(id => genres.find(genre => genre.id === id).name);\n}\n\nfunction getGenresMarkup(genres) {\n  let genresMarkup = '';\n\n  switch (genres.length) {\n    case 0:\n      genresMarkup = `<li class=\"card-set__genre-movie\">Genre's list is empty</li>`;\n      break;\n\n    case 1:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]}</li>`;\n      break;\n\n    case 2:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]}</li>`;\n      break;\n\n    case 3:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[2]}</li>`;\n      break;\n\n    default:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">Other</li>`;\n  }\n\n  return genresMarkup;\n}\n\nfunction renderMovieCard(movie, genres) {\n  const { genre_ids, original_title, id, release_date, title, poster_path } =\n    movie;\n\n  const alphabetGenres = getGenresById(genre_ids, genres);\n  const genresMarkup = getGenresMarkup(alphabetGenres);\n  const productionYear = release_date\n    ? new Date(release_date).getFullYear().toString()\n    : 'Unknown';\n  const posterPath = poster_path\n    ? `https://image.tmdb.org/t/p/original${poster_path}`\n    : `${image}`;\n\n  return `\n        <li class=\"card-set__item\" data-id=\"${id}\">\n            <div class=\"card-set__box-img\">\n            <img\n                loading=\"lazy\"\n                src=\"${posterPath}\"\n                alt=\"${original_title}\"\n                class=\"card-set__img\"\n                \n            />\n            </div>\n            <h3 class=\"card-set__title\">${title}</h3>\n            <div class=\"card-set__description\">\n            <ul class=\"card-set__genre\">\n                ${genresMarkup}\n            </ul>\n            <span class=\"card-set__genre-movie\">&nbsp| ${productionYear}</span>\n            </div>\n        </li>`;\n}\n\nexport { renderPopularMovies, getGenresMarkup };\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bJHJB\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"eM9ss\\\":\\\"library.12e4da02.js\\\",\\\"bJHJB\\\":\\\"movie.a3f3b783.jpg\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$epB3k","parcelRequire","$b89ac968f8ae7162$var$refs","openModalFilm","document","querySelector","closeModalFilm","body","backdropModalFilm","modalFilm","$b89ac968f8ae7162$var$spinModal","$b89ac968f8ae7162$var$renderModalFilm","poster_path","title","vote_average","vote_count","popularity","original_title","genres","overview","markupModalFilm","map","item","name","join","insertAdjacentHTML","$b89ac968f8ae7162$var$onKeyPress","e","code","console","log","classList","add","style","overflow","removeEventListener","$b89ac968f8ae7162$var$onBackdropClick","target","closest","addEventListener","async","innerHTML","remove","getFilmId","dataset","infoAboutModalFilm","presenceInWatched","localStorage","getItem","JSON","parse","find","Number","presenceInQueue","getMovieById","$31u3U","addToLocalStorage","watchedBtn","queueBtn","$fHPRY","changeWatchedButtonCondition","changeQueueButtonCondition","$a7e0245fb0110520$var$KEY","$a7e0245fb0110520$export$76bd8a7b840a3729","pageNumber","fetch","then","response","json","data","_success","success","status_message","$a7e0245fb0110520$export$1664b92369554829","searchQuery","$a7e0245fb0110520$export$e05fa48ccab9af8","$a7e0245fb0110520$export$321e906c11f8df73","$b6f31b61c48869a0$export$a1c83784b50cc96","filmId","getWatched","parsGetWatched","textContent","$b6f31b61c48869a0$export$f5b843a319935072","getQueue","parseGetQueue","$2338c8cd734f85a6$export$b4aebac53294aa19","film","addWatched","getMovies","setItem","stringify","removeWatched","addQueue","removeQueue","filteredMovies","filter","$8e415dd749dd7be8$var$refs","openModalHeart","openModalBtn","modal","$8e415dd749dd7be8$var$toggleModal","onKeyPress","event","onGalleryClick","$696ffb40b89ad88b$var$cardSet","$696ffb40b89ad88b$var$spinner","getElementById","$696ffb40b89ad88b$export$12335c527465096d","getGenreList","error","alert","$696ffb40b89ad88b$var$getGenres","movies","totalPages","results","total_pages","getPopularMovies","$696ffb40b89ad88b$var$getDataAboutPopularMovies","cardsMarkup","movie","genre_ids","release_date","genresMarkup","$696ffb40b89ad88b$export$8d9a840d23167eac","idList","genre","$696ffb40b89ad88b$var$getGenresById","productionYear","Date","getFullYear","toString","$bQRTi","$696ffb40b89ad88b$var$renderMovieCard","module","exports","URL","resolve","import","meta","url","register"],"version":3,"file":"library.12e4da02.js.map"}