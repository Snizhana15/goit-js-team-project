{"mappings":"AAEA,MAAMA,EAAO,CACXC,cAAeC,SAASC,cAAc,aACtCC,eAAgBF,SAASC,cAAc,4BACvCE,KAAMH,SAASC,cAAc,QAC7BG,kBAAmBJ,SAASC,cAAc,aAC1CI,UAAWL,SAASC,cAAc,oBAmB9BK,EAAkBD,IACtB,MAAME,YACJA,EAAWC,MACXA,EAAKC,aACLA,EAAYC,WACZA,EAAUC,WACVA,EAAUC,eACVA,EAAcC,OACdA,EAAMC,SACNA,GACET,EAIEU,EAAkB,uIAGwBR,0IAKDC,6PAKGC,4HAEFC,yLAKJC,0KAIAC,iKA1BzBC,EAAOG,KAAIC,GAAQA,EAAKC,OAAMC,KAAK,gMAmCXL,qVAa3ChB,EAAKO,UAAUe,mBAAmB,YAAaL,IAGjDjB,EAAKC,cAAcsB,iBAAiB,SA/EpBC,MAAMC,IACpB,IAAKA,EAAEC,OAAOC,QAAQ,mBACpB,OAGF3B,EAAKO,UAAUqB,UAAY,GAC3B5B,EAAKM,kBAAkBuB,UAAUC,OAAO,mBACxC9B,EAAKK,KAAK0B,MAAMC,SAAW,SAE3B,MAAMC,EAAYR,EAAEC,OAAOC,QAAQ,mBAAmBO,QAAQC,GAExDC,QCqBqBD,EDrBmBF,ECsBvCI,MACL,sCAAsCF,0DAErCG,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,I,IACEC,EAAN,GAAkB,QAAZA,EAAAD,EAAKE,eAAO,IAAZD,MACJ,MAAM,IAAIE,MAAMH,EAAKI,gBAEvB,OAAOJ,MATN,IAAsBN,EDnB3B3B,EAAgB4B,MAoElBpC,EAAKI,eAAemB,iBAAiB,SAAS,KAC5CvB,EAAKM,kBAAkBuB,UAAUiB,IAAI,mBACrC9C,EAAKK,KAAK0B,MAAMC,SAAW,aE3F7Be,QAAQC,I","sources":["src/js/modal-film.js","src/js/Api.js","src/library.js"],"sourcesContent":["import { getMovieById } from './Api';\n\nconst refs = {\n  openModalFilm: document.querySelector('.card-set'),\n  closeModalFilm: document.querySelector('.film-card__button-close'),\n  body: document.querySelector('body'),\n  backdropModalFilm: document.querySelector('.backdrop'),\n  modalFilm: document.querySelector('.film-card__box'),\n};\n\nconst onClick = async e => {\n  if (!e.target.closest('.card-set__item')) {\n    return;\n  }\n\n  refs.modalFilm.innerHTML = '';\n  refs.backdropModalFilm.classList.remove('visually-hidden');\n  refs.body.style.overflow = 'hidden';\n\n  const getFilmId = e.target.closest('.card-set__item').dataset.id;\n\n  const infoAboutModalFilm = await getMovieById(getFilmId);\n\n  renderModalFilm(infoAboutModalFilm);\n};\n\nconst renderModalFilm = modalFilm => {\n  const {\n    poster_path,\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = modalFilm;\n\n  const genresList = genres.map(item => item.name).join(', ');\n\n  const markupModalFilm = `<div class=\"film-card__image-block\">\n      <img\n        class=\"film-card__image\"\n        src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n        alt=\"film\"\n      />\n    </div>\n    <div class=\"film-card__description\">\n      <h1 class=\"film-card__description-title\">${title}</h1>\n      <ul class=\"film-card__description-set\">\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Vote / Votes</p>\n          <p class=\"description-set__value\">\n            <span class=\"description-set__rating\">${vote_average}</span>\n            <span class=\"description-set__separator\">/</span>\n            <span class=\"description-set__vote\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Popularity</p>\n          <p class=\"description-set__value\">${popularity}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Original Title</p>\n          <p class=\"description-set__value\">${original_title}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Genre</p>\n          <p class=\"description-set__value\">${genresList}</p>\n        </li>\n      </ul>\n      <div class=\"film-card__description-about\">\n        <h2 class=\"description-about__title\">About</h2>\n        <p class=\"description-about__text\">${overview}</p>\n      </div>\n      <div class=\"film-card__description-button\">\n        <button class=\"description-button description-button__watched\">\n          add to Watched\n        </button>\n        <button class=\"description-button description-button__queue\">\n          add to queue\n        </button>\n      </div>\n    </div>\n  </div>`;\n\n  refs.modalFilm.insertAdjacentHTML('beforeend', markupModalFilm);\n};\n\nrefs.openModalFilm.addEventListener('click', onClick);\n\nrefs.closeModalFilm.addEventListener('click', () => {\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n});\n","const KEY = 'fadee9dfff8cb6b1bff36771479589d6';\n\n/*\nФункцию getPopularMovies() используем для запроса при рендере карточек популярных фильмов на главной странице.\n*/\n\nexport function getPopularMovies(pageNumber = 1) {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=${pageNumber}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMoviesBySearchQuery(searchQuery) используем для запроса при рендере карточек при поиске по ключевому слову.\nПараметр searchQuery должен быть строкой из input-а поиска.\n*/\n\nexport function getMoviesBySearchQuery(searchQuery, pageNumber = 1) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${searchQuery}&language=uk&page=${pageNumber}&include_adult=false`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMovieById(id) используем для запроса при отображении полной информации о фильме (модалка при клике на карточку).\nПараметр id должен быть строкой или числом. \n*/\n\nexport function getMovieById(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=uk`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nЖанры каждого фильма хранятся в виде массива чисел. Кажое число соответствует своему жанру. \nФункция getGenreList() возвращает массив объектов, свойствами которых есть число и соответствующий ему жанр.\nИспользуем при отображении жанров на карточках и модалке.\n*/\n\nexport function getGenreList() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${KEY}&language=uk`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n","import * as things from './js/modal-film';\n\nconsole.log(things);\n"],"names":["$b89ac968f8ae7162$var$refs","openModalFilm","document","querySelector","closeModalFilm","body","backdropModalFilm","modalFilm","$b89ac968f8ae7162$var$renderModalFilm","poster_path","title","vote_average","vote_count","popularity","original_title","genres","overview","markupModalFilm","map","item","name","join","insertAdjacentHTML","addEventListener","async","e","target","closest","innerHTML","classList","remove","style","overflow","getFilmId","dataset","id","infoAboutModalFilm","fetch","then","response","json","data","_success","success","Error","status_message","add","console","log"],"version":3,"file":"library.0ffc4d1e.js.map"}