{"mappings":"iiBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,wDAKME,EAAO,CACXC,QAASC,SAASC,cAAc,aAChCC,eAAgBF,SAASC,cAAc,oCACvCE,aAAcH,SAASC,cAAc,mCAGnCG,EAAY,EA2BVC,G,EAAgBC,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,kFACFA,EAAuBC,KAAI,SAAAC,G,OACjD,EAAAC,EAAAC,cAAaF,GAAUG,MAAK,SAAAC,G,OAAYC,EAAcD,S,OADzCE,EAAAC,K,oDADWT,G,iCAMtBO,EAAgB,SAAAG,GACpB,IACEC,EAQED,EARFC,GAEAC,GAMEF,EAPFG,UAOEH,EANFE,aACAE,EAKEJ,EALFI,eACAC,EAIEL,EAJFK,MACAC,EAGEN,EAHFM,aAEAC,GACEP,EAFFQ,OAEER,EADFO,cAGIE,EAAiB,IAAIC,KAAKJ,GAAcK,cAAcC,WAUtDC,EAAS,uCAE8CC,OAFPb,EAAG,uHAEyBa,OAArBZ,EAAY,WAI7BY,OAJsCV,EAAe,sIAUnCU,OANlBT,EAAM,mVAOCS,OADWL,EAAe,gEACbK,OAAbP,EAAa,0DAIhE7B,EAAKC,QAAQoC,mBAAmB,aAAcF,IAG1CG,EAAgB,SAAAC,GACpBjC,EAAYkC,KAAKC,KAAKF,EAAIG,OAAS,KAGrC1C,EAAKI,eAAeuC,iBAAiB,SA9Ef,WACpB,IAAMC,EAAkBC,aAAaC,QAAQ,WACvCC,EAAqBC,KAAKC,MAAML,GAEtC5C,EAAKC,QAAQiD,UAAY,GAEzB3C,EAAcwC,GAEdT,EAAcS,IAEd,EAAAI,EAAAC,kBAAiB9C,EAAWa,MAqE9BnB,EAAKK,aAAasC,iBAAiB,SAlEf,WAClB,IAAMU,EAAsBR,aAAaC,QAAQ,SAC3ClC,EAAyBoC,KAAKC,MAAMI,GAE1CrD,EAAKC,QAAQiD,UAAY,GAEzB3C,EAAcK,GAEd0B,EAAc1B,IAEd,EAAAuC,EAAAC,kBAAiB9C,EAAWa,M","sources":["src/library.js","src/js/render-library.js"],"sourcesContent":["import * as things from './js/modal-film';\nimport * as things from './js/render-library';\nimport * as elements from './js/localStorage';\n\n// console.log(things);\n","import { getStorage } from './modal-film';\nimport { getMovieById } from './Api';\nimport { changeMoviesPage } from './change-movies-page';\n\n// import { renderPopularMovies } from './render-popular-movies';\nconst refs = {\n  cardSet: document.querySelector('.card-set'),\n  showWatchedBtn: document.querySelector('.header-library__button--watched'),\n  showQueueBtn: document.querySelector('.header-library__button--queue'),\n};\n\nlet pageCount = 0;\nconst onShowWatched = () => {\n  const getWatchedMovie = localStorage.getItem('watched');\n  const parsedWatchedMovie = JSON.parse(getWatchedMovie);\n\n  refs.cardSet.innerHTML = '';\n\n  renderWatched(parsedWatchedMovie);\n\n  getCountPages(parsedWatchedMovie);\n\n  changeMoviesPage(pageCount, renderLibrary);\n};\n\nconst onShowQueue = () => {\n  const getMovieFromStorage = localStorage.getItem('queue');\n  const parsedMovieFromStorage = JSON.parse(getMovieFromStorage);\n\n  refs.cardSet.innerHTML = '';\n\n  renderWatched(parsedMovieFromStorage);\n\n  getCountPages(parsedMovieFromStorage);\n\n  changeMoviesPage(pageCount, renderLibrary);\n};\n\nconst renderWatched = async parsedMovieFromStorage => {\n  const getMovies = await parsedMovieFromStorage.map(moevieId =>\n    getMovieById(moevieId).then(response => renderLibrary(response))\n  );\n};\n\nconst renderLibrary = movies => {\n  const {\n    id,\n    genre_ids,\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    genres,\n    vote_average,\n  } = movies;\n\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  // const genresList = genres.map(item => item.id).join(', ');\n\n  // const alphabetGenres = getGenresById(genre_ids, genres);\n  // const genresMarkup = getGenresMarkup(alphabetGenres);\n  // console.log(movies);\n  // console.log(genre_ids);\n  // console.log(genresList);\n\n  const markup = `<li class=\"card-set__item\" data-id=\"${id}\">\n                <div class=\"card-set__box-img\"\">\n                <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${original_title}\"\n                class=\"card-set__img\"\n                />\n                </div>\n                <h3 class=\"card-set__title\">${title}</h3>\n                <div class=\"card-set__description\">\n                <ul class=\"card-set__genre\">\n                    <li class=\"card-set__genre-movie\">Drama,&nbsp</li>\n                    <li class=\"card-set__genre-movie\">Action&nbsp</li>\n                </ul>\n                    <span class=\"card-set__production-year\">| ${productionYear}</span>\n                    <span class=\"card-set__rating\">${vote_average}</span>\n                </div>\n                </li>`;\n\n  refs.cardSet.insertAdjacentHTML('afterbegin', markup);\n};\n\nconst getCountPages = arr => {\n  pageCount = Math.ceil(arr.length / 10);\n};\n\nrefs.showWatchedBtn.addEventListener('click', onShowWatched);\nrefs.showQueueBtn.addEventListener('click', onShowQueue);\n"],"names":["parcelRequire","$bpxeT","$9c5a8c3a213c0f0b$var$refs","cardSet","document","querySelector","showWatchedBtn","showQueueBtn","$9c5a8c3a213c0f0b$var$pageCount","$9c5a8c3a213c0f0b$var$renderWatched","$parcel$interopDefault","$2TvXO","mark","_callee","parsedMovieFromStorage","map","moevieId","$fkvfI","getMovieById","then","response","$9c5a8c3a213c0f0b$var$renderLibrary","_ctx","sent","movies","id","poster_path","genre_ids","original_title","title","release_date","vote_average","genres","productionYear","Date","getFullYear","toString","markup","concat","insertAdjacentHTML","$9c5a8c3a213c0f0b$var$getCountPages","arr","Math","ceil","length","addEventListener","getWatchedMovie","localStorage","getItem","parsedWatchedMovie","JSON","parse","innerHTML","$dpMWy","changeMoviesPage","getMovieFromStorage"],"version":3,"file":"library.4800ff45.js.map"}