{"mappings":"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","sources":["src/js/Api.js","src/js/modal-film.js","src/js/change-movies-page.js","src/js/render-library.js","src/js/localStorage.js"],"sourcesContent":["const KEY = 'fadee9dfff8cb6b1bff36771479589d6';\n\n/*\nФункцию getPopularMovies() используем для запроса при рендере карточек популярных фильмов на главной странице.\n*/\n\nexport function getPopularMovies(pageNumber = 1) {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=${pageNumber}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMoviesBySearchQuery(searchQuery) используем для запроса при рендере карточек при поиске по ключевому слову.\nПараметр searchQuery должен быть строкой из input-а поиска.\n*/\n\nexport function getMoviesBySearchQuery(searchQuery, pageNumber = 1) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${searchQuery}&language=uk&page=${pageNumber}&include_adult=false`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMovieById(id) используем для запроса при отображении полной информации о фильме (модалка при клике на карточку).\nПараметр id должен быть строкой или числом. \n*/\n\nexport function getMovieById(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=uk`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nЖанры каждого фильма хранятся в виде массива чисел. Кажое число соответствует своему жанру. \nФункция getGenreList() возвращает массив объектов, свойствами которых есть число и соответствующий ему жанр.\nИспользуем при отображении жанров на карточках и модалке.\n*/\n\nexport function getGenreList() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${KEY}&language=uk`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n","import { getMovieById } from './Api';\n\nconst refs = {\n  openModalFilm: document.querySelector('.card-set'),\n  closeModalFilm: document.querySelector('.film-card__button-close'),\n  body: document.querySelector('body'),\n  backdropModalFilm: document.querySelector('.backdrop'),\n  modalFilm: document.querySelector('.film-card__box'),\n};\nconst spinModal = document.querySelector('.spinner--modal');\n\nconst onOpenModal = async e => {\n  spinModal.classList.add('spinner');\n  if (!e.target.closest('.card-set__item')) {\n    return;\n  }\n\n  refs.modalFilm.innerHTML = '';\n  refs.backdropModalFilm.classList.remove('visually-hidden');\n  refs.body.style.overflow = 'hidden';\n\n  const getFilmId = e.target.closest('.card-set__item').dataset.id;\n\n  const infoAboutModalFilm = await getMovieById(getFilmId);\n\n  renderModalFilm(infoAboutModalFilm);\n  spinModal.classList.remove('spinner');\n\n  refs.body.addEventListener('keydown', onKeyPress);\n  refs.backdropModalFilm.addEventListener('click', onBackdropClick);\n};\n\nconst renderModalFilm = modalFilm => {\n  const {\n    poster_path,\n    title,\n    id,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = modalFilm;\n\n  const genresList = genres.map(item => item.name).join(', ');\n\n  const markupModalFilm = `<div class=\"film-card__image-block\">\n      <img\n        class=\"film-card__image\"\n        src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n        alt=\"film\"\n      />\n    </div>\n    <div class=\"film-card__description\">\n      <h1 class=\"film-card__description-title\">${title}</h1>\n      <ul class=\"film-card__description-set\">\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Vote / Votes</p>\n          <p class=\"description-set__value\">\n            <span class=\"description-set__rating\">${vote_average}</span>\n            <span class=\"description-set__separator\">/</span>\n            <span class=\"description-set__vote\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Popularity</p>\n          <p class=\"description-set__value\">${popularity}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Original Title</p>\n          <p class=\"description-set__value\">${original_title}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Genre</p>\n          <p class=\"description-set__value\">${genresList}</p>\n        </li>\n      </ul>\n      <div class=\"film-card__description-about\">\n        <h2 class=\"description-about__title\">About</h2>\n        <p class=\"description-about__text\">${overview}</p>\n      </div>\n      <div class=\"film-card__description-button\">\n        <button class=\"description-button description-button__watched\" data-id=\"${id}\">\n          add to Watched\n        </button>\n        <button class=\"description-button description-button__queue\" data-id=\"${id}\">\n          add to queue\n        </button>\n      </div>\n    </div>\n  </div>`;\n\n  refs.modalFilm.insertAdjacentHTML('beforeend', markupModalFilm);\n};\n\nconst onKeyPress = e => {\n  if (e.code === 'Escape') {\n    console.log(e.code);\n    refs.backdropModalFilm.classList.add('visually-hidden');\n    refs.body.style.overflow = 'visible';\n    refs.body.removeEventListener('keydown', onKeyPress);\n  }\n};\n\nconst onBackdropClick = e => {\n  if (e.target.closest('.film-card')) {\n    return;\n  }\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n};\n\nrefs.openModalFilm.addEventListener('click', onOpenModal);\n\nrefs.closeModalFilm.addEventListener('click', () => {\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n});\n","let pageNumber = 1;\n\nconst backwardBtn = document.querySelector('[data-move=\"backward\"]');\nconst forwardBtn = document.querySelector('[data-move=\"forward\"]');\nconst pageNumberList = document.querySelector('.number-page');\nconst cardSet = document.querySelector('.card-set');\n\n/*\n  Функция changeMoviesPage принимает в качестве первого аргумента общее количество страниц, доступных для пагинации, а в качестве второго - функцию для рендера карточек фильмов.\n*/\n\nfunction changeMoviesPage(totalPages, renderMovies) {\n  renderStartPageNumberList(totalPages);\n\n  backwardBtn.addEventListener('click', onBackwardBtnClick);\n  forwardBtn.addEventListener('click', onForwardBtnClick);\n  pageNumberList.addEventListener('click', onPageNumberClick);\n\n  function onForwardBtnClick() {\n    pageNumber += 1;\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    activateBtn(backwardBtn);\n    if (pageNumber === totalPages) {\n      deactivateBtn(forwardBtn);\n    }\n\n    if (pageNumber < 4) {\n      changeCurrentBtnOnStart();\n      return;\n    }\n\n    if (pageNumber > totalPages - 3) {\n      hideLastPageNumberListElement();\n      changeCurrentBtnOnEnd();\n    }\n\n    if (pageNumber >= 4 && pageNumber <= totalPages - 2) {\n      showFirstPageNumberListElement();\n      setNewBtnPageNumbers();\n    }\n  }\n\n  function onBackwardBtnClick() {\n    pageNumber -= 1;\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    activateBtn(forwardBtn);\n    if (pageNumber === 1) {\n      deactivateBtn(backwardBtn);\n    }\n\n    if (pageNumber > totalPages - 3) {\n      changeCurrentBtnOnEnd();\n      return;\n    }\n\n    if (pageNumber < 4) {\n      hideFirstPageNumberListElement();\n      changeCurrentBtnOnStart();\n    }\n\n    if (pageNumber >= 3 && pageNumber <= totalPages - 3) {\n      showLastPageNumberListElement();\n      setNewBtnPageNumbers();\n    }\n  }\n\n  function onPageNumberClick(e) {\n    if (e.target.nodeName !== 'BUTTON') {\n      return;\n    }\n\n    if (e.target.classList.contains('number-page__btn--current')) {\n      return;\n    }\n\n    pageNumber = Number(e.target.textContent);\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    if (pageNumber === 1) {\n      removeCurrentBtnClass();\n      renderStartPageNumberList();\n      return;\n    }\n\n    if (pageNumber === totalPages) {\n      removeCurrentBtnClass();\n      renderEndPageNumberList();\n      return;\n    }\n\n    if (pageNumber >= 4 && pageNumber <= totalPages - 3) {\n      removeCurrentBtnClass();\n      pageNumberList.children[3].firstElementChild.classList.add(\n        'number-page__btn--current'\n      );\n\n      showFirstPageNumberListElement();\n      showLastPageNumberListElement();\n\n      activateBtn(forwardBtn);\n      activateBtn(backwardBtn);\n\n      setNewBtnPageNumbers();\n    }\n\n    if (pageNumber < 4) {\n      changeCurrentBtnOnStart();\n\n      hideFirstPageNumberListElement();\n      if (totalPages > 5) {\n        showLastPageNumberListElement();\n      }\n\n      activateBtn(forwardBtn);\n\n      setNewBtnPageNumbersOnStart();\n      return;\n    }\n\n    if (pageNumber > totalPages - 3) {\n      changeCurrentBtnOnEnd();\n\n      hideLastPageNumberListElement();\n      if (totalPages > 5) {\n        showFirstPageNumberListElement();\n      }\n\n      activateBtn(forwardBtn);\n      activateBtn(backwardBtn);\n\n      setNewBtnPageNumbersOnEnd();\n    }\n  }\n\n  function activateBtn(btnLink) {\n    btnLink.removeAttribute('disabled');\n    btnLink.classList.remove('movies-navigation__arrow-btn--disabled');\n  }\n\n  function deactivateBtn(btnLink) {\n    btnLink.setAttribute('disabled', '');\n    btnLink.classList.add('movies-navigation__arrow-btn--disabled');\n  }\n\n  function renderStartPageNumberList() {\n    if (totalPages < 6) {\n      renderSmallPageNumberList();\n      return;\n    }\n\n    hideFirstPageNumberListElement();\n    showLastPageNumberListElement();\n\n    pageNumberList.children[1].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n    pageNumberList.lastElementChild.firstElementChild.textContent =\n      String(totalPages);\n\n    deactivateBtn(backwardBtn);\n    activateBtn(forwardBtn);\n\n    setNewBtnPageNumbersOnStart();\n  }\n\n  function renderEndPageNumberList() {\n    hideLastPageNumberListElement();\n    if (totalPages > 5) {\n      showFirstPageNumberListElement();\n    }\n\n    pageNumberList.children[\n      totalPages >= 5 ? 5 : totalPages\n    ].firstElementChild.classList.add('number-page__btn--current');\n\n    activateBtn(backwardBtn);\n    deactivateBtn(forwardBtn);\n\n    if (totalPages <= 5) {\n      setNewBtnPageNumbersOnStart();\n      return;\n    }\n    setNewBtnPageNumbersOnEnd();\n  }\n\n  function removeCurrentBtnClass() {\n    const currentBtn = document.querySelector('.number-page__btn--current');\n    currentBtn.classList.remove('number-page__btn--current');\n  }\n\n  function changeCurrentBtnOnStart() {\n    removeCurrentBtnClass();\n    pageNumberList.children[pageNumber].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n  }\n\n  function changeCurrentBtnOnEnd() {\n    removeCurrentBtnClass();\n    pageNumberList.children[\n      pageNumber - totalPages + 5\n    ].firstElementChild.classList.add('number-page__btn--current');\n  }\n\n  function renderSmallPageNumberList() {\n    hideArrowBtns();\n    renderSmallPageNumberListMarkup();\n\n    hideFirstPageNumberListElement();\n    hideLastPageNumberListElement();\n\n    pageNumberList.children[1].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n  }\n\n  function hideLastPageNumberListElement() {\n    pageNumberList.lastElementChild.style.display = 'none';\n    pageNumberList.children[\n      pageNumberList.children.length - 2\n    ].style.marginRight = '0px';\n  }\n\n  function hideFirstPageNumberListElement() {\n    pageNumberList.firstElementChild.style.display = 'none';\n  }\n\n  function showFirstPageNumberListElement() {\n    pageNumberList.firstElementChild.style.display = 'list-item';\n  }\n\n  function showLastPageNumberListElement() {\n    pageNumberList.lastElementChild.style.display = 'list-item';\n    pageNumberList.children[\n      pageNumberList.children.length - 2\n    ].style.marginRight = '16px';\n  }\n\n  function setNewBtnPageNumbers() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = pageNumber - 3 + i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function setNewBtnPageNumbersOnStart() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function setNewBtnPageNumbersOnEnd() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = totalPages - 5 + i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function renderSmallPageNumberListMarkup() {\n    let markup = '';\n    pageNumberList.innerHTML = '';\n    for (let i = 0; i < totalPages + 2; i += 1) {\n      markup += `<li class=\"number-page__item\">\n                <button type=\"button\" class=\"number-page__btn\">${i}</button>\n              </li>`;\n    }\n    pageNumberList.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  function hideArrowBtns() {\n    forwardBtn.style.display = 'none';\n    backwardBtn.style.display = 'none';\n  }\n}\n\nexport { changeMoviesPage };\n","import { getStorage } from './modal-film';\nimport { getMovieById } from './Api';\nimport { changeMoviesPage } from './change-movies-page';\n\n// import { renderPopularMovies } from './render-popular-movies';\nconst refs = {\n  cardSet: document.querySelector('.card-set'),\n  showWatchedBtn: document.querySelector('.header-library__button--watched'),\n  showQueueBtn: document.querySelector('.header-library__button--queue'),\n};\n\nlet pageCount = 0;\nconst onShowWatched = () => {\n  const getWatchedMovie = localStorage.getItem('watched');\n  const parsedWatchedMovie = JSON.parse(getWatchedMovie);\n\n  refs.cardSet.innerHTML = '';\n\n  renderWatched(parsedWatchedMovie);\n\n  getCountPages(parsedWatchedMovie);\n\n  changeMoviesPage(pageCount, renderLibrary);\n};\n\nconst onShowQueue = () => {\n  const getMovieFromStorage = localStorage.getItem('queue');\n  const parsedMovieFromStorage = JSON.parse(getMovieFromStorage);\n\n  refs.cardSet.innerHTML = '';\n\n  renderWatched(parsedMovieFromStorage);\n\n  getCountPages(parsedMovieFromStorage);\n\n  changeMoviesPage(pageCount, renderLibrary);\n};\n\nconst renderWatched = async parsedMovieFromStorage => {\n  const getMovies = await parsedMovieFromStorage.map(moevieId =>\n    getMovieById(moevieId).then(response => renderLibrary(response))\n  );\n};\n\nconst renderLibrary = movies => {\n  const {\n    id,\n    genre_ids,\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    genres,\n    vote_average,\n  } = movies;\n\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  // const genresList = genres.map(item => item.id).join(', ');\n\n  // const alphabetGenres = getGenresById(genre_ids, genres);\n  // const genresMarkup = getGenresMarkup(alphabetGenres);\n  // console.log(movies);\n  // console.log(genre_ids);\n  // console.log(genresList);\n\n  const markup = `<li class=\"card-set__item\" data-id=\"${id}\">\n                <div class=\"card-set__box-img\"\">\n                <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${original_title}\"\n                class=\"card-set__img\"\n                />\n                </div>\n                <h3 class=\"card-set__title\">${title}</h3>\n                <div class=\"card-set__description\">\n                <ul class=\"card-set__genre\">\n                    <li class=\"card-set__genre-movie\">Drama,&nbsp</li>\n                    <li class=\"card-set__genre-movie\">Action&nbsp</li>\n                </ul>\n                    <span class=\"card-set__production-year\">| ${productionYear}</span>\n                    <span class=\"card-set__rating\">${vote_average}</span>\n                </div>\n                </li>`;\n\n  refs.cardSet.insertAdjacentHTML('afterbegin', markup);\n};\n\nconst getCountPages = arr => {\n  pageCount = Math.ceil(arr.length / 10);\n};\n\nrefs.showWatchedBtn.addEventListener('click', onShowWatched);\nrefs.showQueueBtn.addEventListener('click', onShowQueue);\n","const cardBox = document.querySelector('.film-card__box');\ncardBox.addEventListener('click', addWatched);\ncardBox.addEventListener('click', addQueue);\nfunction addWatched(e) {\n  if (!e.target.closest('.description-button__watched')) {\n    return;\n  }\n  const getFilmId = e.target.closest('.description-button__watched').dataset.id;\n  const films = JSON.parse(localStorage.getItem('watched') || '[]');\n  const film = getFilmId;\n\n  if (films.includes(film)) {\n    return;\n  }\n\n  films.push(film);\n  localStorage.setItem('watched', JSON.stringify(films));\n}\nfunction addQueue(e) {\n  if (!e.target.closest('.description-button__queue')) {\n    return;\n  }\n  const getFilmId = e.target.closest('.description-button__queue').dataset.id;\n  const films = JSON.parse(localStorage.getItem('queue') || '[]');\n  const film = getFilmId;\n\n  if (films.includes(film)) {\n    return;\n  }\n\n  films.push(film);\n  localStorage.setItem('queue', JSON.stringify(films));\n}\n"],"names":["$a7e0245fb0110520$export$e05fa48ccab9af8","id","fetch","then","response","json","data","_success","success","Error","status_message","$b89ac968f8ae7162$var$refs","openModalFilm","document","querySelector","closeModalFilm","body","backdropModalFilm","modalFilm","$b89ac968f8ae7162$var$spinModal","$b89ac968f8ae7162$var$renderModalFilm","poster_path","title","vote_average","vote_count","popularity","original_title","genres","overview","markupModalFilm","map","item","name","join","insertAdjacentHTML","$b89ac968f8ae7162$var$onKeyPress","e","code","console","log","classList","add","style","overflow","removeEventListener","$b89ac968f8ae7162$var$onBackdropClick","target","closest","addEventListener","async","innerHTML","remove","getFilmId","dataset","infoAboutModalFilm","$1c72f1042fbd7648$var$pageNumber","$1c72f1042fbd7648$var$backwardBtn","$1c72f1042fbd7648$var$forwardBtn","$1c72f1042fbd7648$var$pageNumberList","$1c72f1042fbd7648$var$cardSet","$1c72f1042fbd7648$export$d91c9980e9a24ec2","totalPages","renderMovies","activateBtn","btnLink","removeAttribute","deactivateBtn","setAttribute","renderStartPageNumberList","display","markup","i","renderSmallPageNumberListMarkup","hideFirstPageNumberListElement","hideLastPageNumberListElement","children","firstElementChild","showLastPageNumberListElement","lastElementChild","textContent","String","setNewBtnPageNumbersOnStart","removeCurrentBtnClass","changeCurrentBtnOnStart","changeCurrentBtnOnEnd","length","marginRight","showFirstPageNumberListElement","setNewBtnPageNumbers","newPageNumber","toString","setNewBtnPageNumbersOnEnd","scrollIntoView","nodeName","contains","Number","renderEndPageNumberList","$76d8f5d523e840d5$var$refs","cardSet","showWatchedBtn","showQueueBtn","$76d8f5d523e840d5$var$pageCount","$76d8f5d523e840d5$var$renderWatched","parsedMovieFromStorage","moevieId","$76d8f5d523e840d5$var$renderLibrary","movies","genre_ids","release_date","Date","getFullYear","$76d8f5d523e840d5$var$getCountPages","arr","Math","ceil","getWatchedMovie","localStorage","getItem","parsedWatchedMovie","JSON","parse","getMovieFromStorage","$2338c8cd734f85a6$var$cardBox","films","film","includes","push","setItem","stringify"],"version":3,"file":"library.f252648e.js.map"}