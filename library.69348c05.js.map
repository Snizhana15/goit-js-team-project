{"mappings":"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","sources":["src/library.js","src/js/render-library.js"],"sourcesContent":["import * as things from './js/modal-film';\nimport * as elements from './js/localStorage';\nimport * as things from './js/change-button-condition';\nimport * as elem from './js/modal-students';\nimport { showLibraryPage, downloadLibraryPage } from './js/render-library';\n\ndownloadLibraryPage(showLibraryPage);\n","import { getMovieById } from './Api';\nimport { getGenresMarkup } from './render-popular-movies';\n\nconst refs = {\n  cardSet: document.querySelector('.card-set'),\n  showWatchedBtn: document.querySelector('.header-library__button--watched'),\n  showQueueBtn: document.querySelector('.header-library__button--queue'),\n  paginationSet: document.querySelector('.pagination'),\n};\n\nconst watchedSpinner = document.querySelector(\n  '.header-library--watched--spinner'\n);\nconst queueSpinner = document.querySelector('.header-library--queue--spinner');\n\nlet pageCount = 0;\nconst moviesbyPage = 10;\n\nconst getWatchedList = () => {\n  const parsedWatchedMovies = JSON.parse(\n    localStorage.getItem('watched') || '[]'\n  );\n  return parsedWatchedMovies;\n};\n\nconst getQueueList = () => {\n  const parsedQueueMovies = JSON.parse(localStorage.getItem('queue') || '[]');\n  return parsedQueueMovies;\n};\n\nconst getLibraryList = () => {\n  const parsedWatchedMovies = JSON.parse(\n    localStorage.getItem('watched') || '[]'\n  );\n\n  const parsedQueueMovies = JSON.parse(localStorage.getItem('queue') || '[]');\n\n  const parsedAllMoeviesList = [...parsedWatchedMovies, ...parsedQueueMovies];\n  const parsedUniqueMoeviesList = parsedAllMoeviesList.filter(\n    (value, index, arr) => arr.indexOf(value) === index\n  );\n  return parsedUniqueMoeviesList;\n};\n\nconst onShowWatched = () => {\n  watchedSpinner.classList.add('spinner');\n\n  refs.paginationSet.removeEventListener('click', onClickLibrary);\n  refs.paginationSet.removeEventListener('click', onClickQueue);\n\n  const watchedList = getWatchedList();\n\n  const startPageWatched = watchedList.slice(0, moviesbyPage);\n  refs.cardSet.innerHTML = '';\n\n  getCountPages(watchedList);\n  renderWatched(startPageWatched);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickWatched);\n};\n\nconst onShowQueue = () => {\n  queueSpinner.classList.add('spinner');\n\n  refs.paginationSet.removeEventListener('click', onClickLibrary);\n  refs.paginationSet.removeEventListener('click', onClickWatched);\n\n  const queueList = getQueueList();\n  const startPageQueue = queueList.slice(0, moviesbyPage);\n\n  refs.cardSet.innerHTML = '';\n\n  getCountPages(queueList);\n  renderWatched(startPageQueue);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickQueue);\n};\n\nconst showLibraryPage = () => {\n  refs.paginationSet.removeEventListener('click', onClickWatched);\n  refs.paginationSet.removeEventListener('click', onClickQueue);\n\n  const libraryList = getLibraryList();\n\n  const startPageLibrary = libraryList.slice(0, moviesbyPage);\n  refs.cardSet.innerHTML = '';\n\n  getCountPages(libraryList);\n  renderWatched(startPageLibrary);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickLibrary);\n};\n\nconst renderWatched = async parsedMovieFromStorage => {\n  const getMovies = await parsedMovieFromStorage.map(moevieId =>\n    getMovieById(moevieId).then(response => renderLibrary(response))\n  );\n};\n\nconst getLibraryGenresById = (idList, genres) => {\n  return idList.map(id => genres.find(genre => genre.id === id).name);\n};\n\nconst renderLibrary = movies => {\n  const {\n    id,\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    genres,\n    vote_average,\n  } = movies;\n\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  const idList = genres.map(i => (i = i.id));\n\n  const alphabetGenres = getLibraryGenresById(idList, genres);\n\n  const genresMarkup = getGenresMarkup(alphabetGenres);\n\n  const markup = `<li class=\"card-set__item\" data-id=\"${id}\">\n                <div class=\"card-set__box-img\"\">\n                <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${original_title}\"\n                class=\"card-set__img\"\n                />\n                </div>\n                <h3 class=\"card-set__title\">${title}</h3>\n                <div class=\"card-set__description\">\n                <ul class=\"card-set__genre\">\n                    ${genresMarkup}\n                </ul>\n                    <span class=\"card-set__production-year\">&nbsp| ${productionYear}&nbsp</span>\n                    <span class=\"card-set__rating\">${vote_average}</span>\n                </div>\n                </li>`;\n\n  refs.cardSet.insertAdjacentHTML('afterbegin', markup);\n  watchedSpinner.classList.remove('spinner');\n  queueSpinner.classList.remove('spinner');\n};\n\nconst getCountPages = arr => {\n  pageCount = Math.ceil(arr.length / moviesbyPage);\n};\n\nconst downloadLibraryPage = showLibraryPage => {\n  showLibraryPage();\n};\n\nrefs.showWatchedBtn.addEventListener('click', onShowWatched);\nrefs.showQueueBtn.addEventListener('click', onShowQueue);\n\nconst renderByPage = (a, arrayAllMoviesForRender) => {\n  const startPositionForRender = a * moviesbyPage - moviesbyPage;\n\n  const arrayMoviesByPage = arrayAllMoviesForRender.splice(\n    startPositionForRender,\n    moviesbyPage\n  );\n\n  refs.cardSet.innerHTML = '';\n  renderWatched(arrayMoviesByPage);\n  markupNumPage(pageCount);\n};\n\nconst onClickWatched = e => {\n  const watched = getWatchedList();\n\n  getNumberPage = Number(e.target.closest('.pagination__button').id);\n\n  renderByPage(getNumberPage, watched);\n};\n\nconst onClickQueue = e => {\n  const queue = getQueueList();\n\n  getNumberPage = Number(e.target.closest('.pagination__button').id);\n\n  renderByPage(getNumberPage, queue);\n};\n\nconst onClickLibrary = e => {\n  const library = getLibraryList();\n\n  getNumberPage = Number(e.target.closest('.pagination__button').id);\n  btn = e.target.closest('.pagination__button');\n  console.log(btn);\n  btn.classList.add('pagination__button--current');\n\n  renderByPage(getNumberPage, library);\n};\n\n//====================render pagination for library============\n\nconst markupNumPage = pageCount => {\n  markupEmpty = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    const page = `<li class=\"pagination__item\">\n        <button class=\"pagination__button\" id=\"${i}\">${i}</button>\n      </li>`;\n\n    markupEmpty.push(page);\n  }\n\n  const markup = markupEmpty.join('');\n\n  refs.paginationSet.innerHTML = '';\n  refs.paginationSet.insertAdjacentHTML('afterbegin', markup);\n};\n//==========================================\n\nexport { showLibraryPage, downloadLibraryPage };\n"],"names":["parcelRequire","$epB3k","$76d8f5d523e840d5$var$refs","cardSet","document","querySelector","showWatchedBtn","showQueueBtn","paginationSet","$76d8f5d523e840d5$var$watchedSpinner","$76d8f5d523e840d5$var$queueSpinner","$76d8f5d523e840d5$var$pageCount","$76d8f5d523e840d5$var$getWatchedList","JSON","parse","localStorage","getItem","$76d8f5d523e840d5$var$getQueueList","$76d8f5d523e840d5$var$getLibraryList","filter","value","index","arr","indexOf","$76d8f5d523e840d5$var$renderWatched","async","parsedMovieFromStorage","map","moevieId","getMovieById","then","response","$76d8f5d523e840d5$var$renderLibrary","movies","id","poster_path","original_title","title","release_date","genres","vote_average","productionYear","Date","getFullYear","toString","alphabetGenres","idList","find","genre","name","$76d8f5d523e840d5$var$getLibraryGenresById","i","markup","$93eWd","getGenresMarkup","insertAdjacentHTML","classList","remove","$76d8f5d523e840d5$var$getCountPages","Math","ceil","length","addEventListener","add","removeEventListener","$76d8f5d523e840d5$var$onClickLibrary","$76d8f5d523e840d5$var$onClickQueue","watchedList","startPageWatched","slice","innerHTML","$76d8f5d523e840d5$var$markupNumPage","$76d8f5d523e840d5$var$onClickWatched","queueList","startPageQueue","$76d8f5d523e840d5$var$renderByPage","a","arrayAllMoviesForRender","startPositionForRender","arrayMoviesByPage","splice","e","watched","getNumberPage","Number","target","closest","queue","library","btn","console","log","pageCount1","markupEmpty","page","push","join","libraryList","startPageLibrary","showLibraryPage1"],"version":3,"file":"library.69348c05.js.map"}