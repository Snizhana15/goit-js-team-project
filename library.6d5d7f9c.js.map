{"mappings":"oeAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,S,0BAIA,MAAME,EAAO,CACXC,QAASC,SAASC,cAAc,aAChCC,eAAgBF,SAASC,cAAc,oCACvCE,aAAcH,SAASC,cAAc,mCAEjCG,EAAiBJ,SAASC,cAC9B,qCAEII,EAAeL,SAASC,cAAc,mCAC5C,IAAIK,EAAY,EAEhB,MA4BMC,EAAgBC,MAAMC,UACFA,EAAuBC,KAAIC,IACjD,EAAAd,EAAAe,cAAaD,GAAUE,MAAKC,GAAYC,EAAcD,QAQpDC,EAAgBC,IACpB,MAAMC,GACJA,EAAEC,YACFA,EAAWC,eACXA,EAAcC,MACdA,EAAKC,aACLA,EAAYC,OACZA,EAAMC,aACNA,GACEP,EAEEQ,EAAiB,IAAIC,KAAKJ,GAAcK,cAAcC,WAItDC,EAnBqB,EAACC,EAAQP,IAC7BO,EAAOnB,KAAIO,GAAMK,EAAOQ,MAAKC,GAASA,EAAMd,KAAOA,IAAIe,OAkBvCC,CAFRX,EAAOZ,KAAIwB,GAAUA,EAAEjB,KAEcK,GAI9Ca,EAAS,uCAAuClB,uHAEOC,WAAqBC,sIAItCC,qIARvB,EAAAgB,EAAAC,iBAAgBT,4FAayBJ,gEACXD,0DAInDzB,EAAKC,QAAQuC,mBAAmB,aAAcH,GAC9C/B,EAAemC,UAAUC,OAAO,WAChCnC,EAAakC,UAAUC,OAAO,YAG1BC,EAAgBC,IACpBpC,EAAYqC,KAAKC,KAAKF,EAAIG,OAAS,KA4BrC/C,EAAKI,eAAe4C,iBAAiB,SA3Gf,KACpB1C,EAAemC,UAAUQ,IAAI,WAC7B,MAAMC,EAAsBC,KAAKC,MAC/BC,aAAaC,QAAQ,YAAc,MAGrCtD,EAAKC,QAAQsD,UAAY,GAEzB9C,EAAcyC,GAEdP,EAAcO,IAEd,EAAAM,EAAAC,kBAAiBjD,EAAWS,MAgG9BjB,EAAKK,aAAa2C,iBAAiB,SA7Ff,KAClBzC,EAAakC,UAAUQ,IAAI,WAC3B,MAAMS,EAAoBP,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAEtEtD,EAAKC,QAAQsD,UAAY,GAEzB9C,EAAciD,GAEdf,EAAce,IAEd,EAAAF,EAAAC,kBAAiBjD,EAAWS,MAyDN,MACtB,MAOM0C,EADiB,IANKR,KAAKC,MAC/BC,aAAaC,QAAQ,YAAc,SAGXH,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,OAG7BM,QACvC,CAACC,EAAOC,EAAOlB,IAAQA,EAAImB,QAAQF,KAAWC,IAGhD9D,EAAKC,QAAQsD,UAAY,GAEzB9C,EAAckD,GAEdhB,EAAcgB,IAEd,EAAAH,EAAAC,kBAAiBjD,EAAWS,IAI5B+C","sources":["src/library.js","src/js/render-library.js"],"sourcesContent":["import * as things from './js/modal-film';\nimport * as elements from './js/localStorage';\nimport * as things from './js/change-button-condition';\nimport { showLibraryPage, downloadLibraryPage } from './js/render-library';\n\ndownloadLibraryPage(showLibraryPage);\n","import { getMovieById } from './Api';\nimport { changeMoviesPage } from './change-movies-page';\nimport { getGenresMarkup } from './render-popular-movies';\n\nconst refs = {\n  cardSet: document.querySelector('.card-set'),\n  showWatchedBtn: document.querySelector('.header-library__button--watched'),\n  showQueueBtn: document.querySelector('.header-library__button--queue'),\n};\nconst watchedSpinner = document.querySelector(\n  '.header-library--watched--spinner'\n);\nconst queueSpinner = document.querySelector('.header-library--queue--spinner');\nlet pageCount = 0;\n\nconst onShowWatched = () => {\n  watchedSpinner.classList.add('spinner');\n  const parsedWatchedMovies = JSON.parse(\n    localStorage.getItem('watched') || '[]'\n  );\n\n  refs.cardSet.innerHTML = '';\n\n  renderWatched(parsedWatchedMovies);\n\n  getCountPages(parsedWatchedMovies);\n\n  changeMoviesPage(pageCount, renderLibrary);\n};\n\nconst onShowQueue = () => {\n  queueSpinner.classList.add('spinner');\n  const parsedQueueMovies = JSON.parse(localStorage.getItem('queue') || '[]');\n\n  refs.cardSet.innerHTML = '';\n\n  renderWatched(parsedQueueMovies);\n\n  getCountPages(parsedQueueMovies);\n\n  changeMoviesPage(pageCount, renderLibrary);\n};\n\nconst renderWatched = async parsedMovieFromStorage => {\n  const getMovies = await parsedMovieFromStorage.map(moevieId =>\n    getMovieById(moevieId).then(response => renderLibrary(response))\n  );\n};\n\nconst getLibraryGenresById = (idList, genres) => {\n  return idList.map(id => genres.find(genre => genre.id === id).name);\n};\n\nconst renderLibrary = movies => {\n  const {\n    id,\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    genres,\n    vote_average,\n  } = movies;\n\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  const idList = genres.map(i => (i = i.id));\n\n  const alphabetGenres = getLibraryGenresById(idList, genres);\n\n  const genresMarkup = getGenresMarkup(alphabetGenres);\n\n  const markup = `<li class=\"card-set__item\" data-id=\"${id}\">\n                <div class=\"card-set__box-img\"\">\n                <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${original_title}\"\n                class=\"card-set__img\"\n                />\n                </div>\n                <h3 class=\"card-set__title\">${title}</h3>\n                <div class=\"card-set__description\">\n                <ul class=\"card-set__genre\">\n                      ${genresMarkup}\n                </ul>\n                    <span class=\"card-set__production-year\">| ${productionYear}</span>\n                    <span class=\"card-set__rating\">${vote_average}</span>\n                </div>\n                </li>`;\n\n  refs.cardSet.insertAdjacentHTML('afterbegin', markup);\n  watchedSpinner.classList.remove('spinner');\n  queueSpinner.classList.remove('spinner');\n};\n\nconst getCountPages = arr => {\n  pageCount = Math.ceil(arr.length / 10);\n};\n\nconst showLibraryPage = () => {\n  const parsedWatchedMovies = JSON.parse(\n    localStorage.getItem('watched') || '[]'\n  );\n\n  const parsedQueueMovies = JSON.parse(localStorage.getItem('queue') || '[]');\n\n  const allMoeviesList = [...parsedWatchedMovies, ...parsedQueueMovies];\n  const uniqueMoeviesList = allMoeviesList.filter(\n    (value, index, arr) => arr.indexOf(value) === index\n  );\n\n  refs.cardSet.innerHTML = '';\n\n  renderWatched(uniqueMoeviesList);\n\n  getCountPages(uniqueMoeviesList);\n\n  changeMoviesPage(pageCount, renderLibrary);\n};\n\nconst downloadLibraryPage = showLibraryPage => {\n  showLibraryPage();\n};\n\nrefs.showWatchedBtn.addEventListener('click', onShowWatched);\nrefs.showQueueBtn.addEventListener('click', onShowQueue);\n\nexport { showLibraryPage, downloadLibraryPage };\n"],"names":["parcelRequire","$epB3k","$76d8f5d523e840d5$var$refs","cardSet","document","querySelector","showWatchedBtn","showQueueBtn","$76d8f5d523e840d5$var$watchedSpinner","$76d8f5d523e840d5$var$queueSpinner","$76d8f5d523e840d5$var$pageCount","$76d8f5d523e840d5$var$renderWatched","async","parsedMovieFromStorage","map","moevieId","getMovieById","then","response","$76d8f5d523e840d5$var$renderLibrary","movies","id","poster_path","original_title","title","release_date","genres","vote_average","productionYear","Date","getFullYear","toString","alphabetGenres","idList","find","genre","name","$76d8f5d523e840d5$var$getLibraryGenresById","i","markup","$93eWd","getGenresMarkup","insertAdjacentHTML","classList","remove","$76d8f5d523e840d5$var$getCountPages","arr","Math","ceil","length","addEventListener","add","parsedWatchedMovies","JSON","parse","localStorage","getItem","innerHTML","$2rqRD","changeMoviesPage","parsedQueueMovies","uniqueMoeviesList","filter","value","index","indexOf","showLibraryPage1"],"version":3,"file":"library.6d5d7f9c.js.map"}