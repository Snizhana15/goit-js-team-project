{"mappings":"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","sources":["src/js/render-popular-movies.js","src/js/Api.js","src/js/change-movies-page.js","src/js/modal-film.js","src/js/change-button-condition.js","src/js/localStorage.js"],"sourcesContent":["import { getPopularMovies, getGenreList } from './Api';\n\nconst cardSet = document.querySelector('.card-set');\nconst spinner = document.getElementById('spinner');\n\nasync function getGenres() {\n  try {\n    const { genres } = await getGenreList();\n    return genres;\n  } catch (error) {\n    alert(error);\n  }\n}\n\nasync function getDataAboutPopularMovies(pageNumber) {\n  try {\n    const { results: movies, total_pages: totalPages } = await getPopularMovies(\n      pageNumber\n    );\n    return { movies, totalPages };\n  } catch (error) {\n    alert(error);\n  }\n}\n\nasync function renderPopularMovies(pageNumber) {\n  spinner.classList.add('spinner');\n  const genres = await getGenres();\n  const { movies, totalPages } = await getDataAboutPopularMovies(pageNumber);\n\n  const cardsMarkup = movies\n    .map(movie => renderMovieCard(movie, genres))\n    .join('');\n\n  cardSet.innerHTML = '';\n  cardSet.insertAdjacentHTML('afterbegin', cardsMarkup);\n  spinner.classList.remove('spinner');\n  return totalPages;\n}\n\nfunction getGenresById(idList, genres) {\n  return idList.map(id => genres.find(genre => genre.id === id).name);\n}\n\nfunction getGenresMarkup(genres) {\n  let genresMarkup = '';\n\n  switch (genres.length) {\n    case 1:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]}</li>`;\n      break;\n\n    case 2:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]}</li>`;\n      break;\n\n    case 3:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[2]}</li>`;\n      break;\n\n    default:\n      genresMarkup = `<li class=\"card-set__genre-movie\">${genres[0]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">${genres[1]},&nbsp</li>\n                      <li class=\"card-set__genre-movie\">Інші</li>`;\n  }\n\n  return genresMarkup;\n}\n\nfunction renderMovieCard(movie, genres) {\n  const { genre_ids, original_title, id, release_date, title, poster_path } =\n    movie;\n\n  const alphabetGenres = getGenresById(genre_ids, genres);\n  const genresMarkup = getGenresMarkup(alphabetGenres);\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  return `\n        <li class=\"card-set__item\" data-id=\"${id}\">\n            <div class=\"card-set__box-img\">\n            <img\n                loading=\"lazy\"\n                src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n                alt=\"${original_title}\"\n                class=\"card-set__img\"\n                \n            />\n            </div>\n            <h3 class=\"card-set__title\">${title}</h3>\n            <div class=\"card-set__description\">\n            <ul class=\"card-set__genre\">\n                ${genresMarkup}\n            </ul>\n            <span class=\"card-set__genre-movie\">&nbsp| ${productionYear}</span>\n            </div>\n        </li>`;\n}\n\nexport { renderPopularMovies, getGenresMarkup };\n","const KEY = 'fadee9dfff8cb6b1bff36771479589d6';\n\n/*\nФункцию getPopularMovies() используем для запроса при рендере карточек популярных фильмов на главной странице.\n*/\n\nexport function getPopularMovies(pageNumber = 1) {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=${pageNumber}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMoviesBySearchQuery(searchQuery) используем для запроса при рендере карточек при поиске по ключевому слову.\nПараметр searchQuery должен быть строкой из input-а поиска.\n*/\n\nexport function getSearchQuery(searchQuery, pageNumber = 1) {\n  const url = 'https://api.themoviedb.org/3';\n  return fetch(`${url}/search/movie?api_key=${KEY}&query=${searchQuery}&language=uk&page=${pageNumber}&include_adult=false`)\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMovieById(id) используем для запроса при отображении полной информации о фильме (модалка при клике на карточку).\nПараметр id должен быть строкой или числом. \n*/\n\nexport function getMovieById(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=uk`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nЖанры каждого фильма хранятся в виде массива чисел. Кажое число соответствует своему жанру. \nФункция getGenreList() возвращает массив объектов, свойствами которых есть число и соответствующий ему жанр.\nИспользуем при отображении жанров на карточках и модалке.\n*/\n\nexport function getGenreList() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${KEY}&language=uk`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n","let pageNumber = 1;\n\nconst backwardBtn = document.querySelector('[data-move=\"backward\"]');\nconst forwardBtn = document.querySelector('[data-move=\"forward\"]');\nconst pageNumberList = document.querySelector('.number-page');\nconst cardSet = document.querySelector('.card-set');\n\n/*\n  Функция changeMoviesPage принимает в качестве первого аргумента общее количество страниц, доступных для пагинации, а в качестве второго - функцию для рендера карточек фильмов.\n*/\n\nfunction changeMoviesPage(totalPages, renderMovies) {\n  renderStartPageNumberList(totalPages);\n\n  backwardBtn.addEventListener('click', onBackwardBtnClick);\n  forwardBtn.addEventListener('click', onForwardBtnClick);\n  pageNumberList.addEventListener('click', onPageNumberClick);\n\n  function onForwardBtnClick() {\n    pageNumber += 1;\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    activateBtn(backwardBtn);\n    if (pageNumber === totalPages) {\n      deactivateBtn(forwardBtn);\n    }\n\n    if (pageNumber < 4) {\n      changeCurrentBtnOnStart();\n      return;\n    }\n\n    if (pageNumber > totalPages - 3) {\n      hideLastPageNumberListElement();\n      changeCurrentBtnOnEnd();\n    }\n\n    if (pageNumber >= 4 && pageNumber <= totalPages - 2) {\n      showFirstPageNumberListElement();\n      setNewBtnPageNumbers();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function onBackwardBtnClick() {\n    pageNumber -= 1;\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    activateBtn(forwardBtn);\n    if (pageNumber === 1) {\n      deactivateBtn(backwardBtn);\n    }\n\n    if (pageNumber > totalPages - 3) {\n      changeCurrentBtnOnEnd();\n      return;\n    }\n\n    if (pageNumber < 4) {\n      hideFirstPageNumberListElement();\n      changeCurrentBtnOnStart();\n    }\n\n    if (pageNumber >= 3 && pageNumber <= totalPages - 3) {\n      showLastPageNumberListElement();\n      setNewBtnPageNumbers();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function onPageNumberClick(e) {\n    if (e.target.nodeName !== 'BUTTON') {\n      return;\n    }\n\n    if (e.target.classList.contains('number-page__btn--current')) {\n      return;\n    }\n\n    pageNumber = Number(e.target.textContent);\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    if (pageNumber === 1) {\n      removeCurrentBtnClass();\n      renderStartPageNumberList();\n      return;\n    }\n\n    if (pageNumber === totalPages) {\n      removeCurrentBtnClass();\n      renderEndPageNumberList();\n      return;\n    }\n\n    if (pageNumber >= 4 && pageNumber <= totalPages - 3) {\n      removeCurrentBtnClass();\n      pageNumberList.children[3].firstElementChild.classList.add(\n        'number-page__btn--current'\n      );\n\n      showFirstPageNumberListElement();\n      showLastPageNumberListElement();\n\n      activateBtn(forwardBtn);\n      activateBtn(backwardBtn);\n\n      setNewBtnPageNumbers();\n    }\n\n    if (pageNumber < 4) {\n      changeCurrentBtnOnStart();\n\n      hideFirstPageNumberListElement();\n      if (totalPages > 5) {\n        showLastPageNumberListElement();\n      }\n\n      activateBtn(forwardBtn);\n\n      setNewBtnPageNumbersOnStart();\n      return;\n    }\n\n    if (pageNumber > totalPages - 3) {\n      changeCurrentBtnOnEnd();\n\n      hideLastPageNumberListElement();\n      if (totalPages > 5) {\n        showFirstPageNumberListElement();\n      }\n\n      activateBtn(forwardBtn);\n      activateBtn(backwardBtn);\n\n      setNewBtnPageNumbersOnEnd();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function activateBtn(btnLink) {\n    btnLink.removeAttribute('disabled');\n    btnLink.classList.remove('movies-navigation__arrow-btn--disabled');\n  }\n\n  function deactivateBtn(btnLink) {\n    btnLink.setAttribute('disabled', '');\n    btnLink.classList.add('movies-navigation__arrow-btn--disabled');\n  }\n\n  function renderStartPageNumberList() {\n    if (totalPages < 6) {\n      renderSmallPageNumberList();\n      return;\n    }\n\n    hideFirstPageNumberListElement();\n    showLastPageNumberListElement();\n\n    pageNumberList.children[1].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n    pageNumberList.lastElementChild.firstElementChild.textContent =\n      String(totalPages);\n\n    deactivateBtn(backwardBtn);\n    activateBtn(forwardBtn);\n\n    setNewBtnPageNumbersOnStart();\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function renderEndPageNumberList() {\n    hideLastPageNumberListElement();\n    if (totalPages > 5) {\n      showFirstPageNumberListElement();\n    }\n\n    pageNumberList.children[\n      totalPages >= 5 ? 5 : totalPages\n    ].firstElementChild.classList.add('number-page__btn--current');\n\n    activateBtn(backwardBtn);\n    deactivateBtn(forwardBtn);\n\n    if (totalPages <= 5) {\n      setNewBtnPageNumbersOnStart();\n      return;\n    }\n    setNewBtnPageNumbersOnEnd();\n  }\n\n  function removeCurrentBtnClass() {\n    const currentBtn = document.querySelector('.number-page__btn--current');\n    currentBtn.classList.remove('number-page__btn--current');\n  }\n\n  function changeCurrentBtnOnStart() {\n    removeCurrentBtnClass();\n    pageNumberList.children[pageNumber].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n  }\n\n  function changeCurrentBtnOnEnd() {\n    removeCurrentBtnClass();\n    pageNumberList.children[\n      pageNumber - totalPages + 5\n    ].firstElementChild.classList.add('number-page__btn--current');\n  }\n\n  function renderSmallPageNumberList() {\n    hideArrowBtns();\n    renderSmallPageNumberListMarkup();\n\n    hideFirstPageNumberListElement();\n    hideLastPageNumberListElement();\n\n    pageNumberList.children[1].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n  }\n\n  function hideLastPageNumberListElement() {\n    pageNumberList.lastElementChild.style.display = 'none';\n    pageNumberList.children[\n      pageNumberList.children.length - 2\n    ].style.marginRight = '0px';\n  }\n\n  function hideFirstPageNumberListElement() {\n    pageNumberList.firstElementChild.style.display = 'none';\n  }\n\n  function showFirstPageNumberListElement() {\n    pageNumberList.firstElementChild.style.display = 'list-item';\n  }\n\n  function showLastPageNumberListElement() {\n    pageNumberList.lastElementChild.style.display = 'list-item';\n    pageNumberList.children[\n      pageNumberList.children.length - 2\n    ].style.marginRight = '16px';\n  }\n\n  function setNewBtnPageNumbers() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = pageNumber - 3 + i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function setNewBtnPageNumbersOnStart() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function setNewBtnPageNumbersOnEnd() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = totalPages - 5 + i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function renderSmallPageNumberListMarkup() {\n    let markup = '';\n    pageNumberList.innerHTML = '';\n    for (let i = 0; i < totalPages + 2; i += 1) {\n      markup += `<li class=\"number-page__item\">\n                <button type=\"button\" class=\"number-page__btn\">${i}</button>\n              </li>`;\n    }\n    pageNumberList.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  function hideArrowBtns() {\n    forwardBtn.style.display = 'none';\n    backwardBtn.style.display = 'none';\n  }\n\n  function hideStartAndEndPageNumbersForMobile() {\n    if (window.innerWidth < 768) {\n      hideFirstPageNumberListElement();\n      hideLastPageNumberListElement();\n    }\n  }\n}\n\nexport { changeMoviesPage };\n","import { getMovieById } from './Api';\nimport {\n  changeWatchedButtonCondition,\n  changeQueueButtonCondition,\n} from './change-button-condition';\n\nconst refs = {\n  openModalFilm: document.querySelector('.card-set'),\n  closeModalFilm: document.querySelector('.film-card__button-close'),\n  body: document.querySelector('body'),\n  backdropModalFilm: document.querySelector('.backdrop'),\n  modalFilm: document.querySelector('.film-card__box'),\n};\nconst spinModal = document.querySelector('.spinner--modal');\n\nconst onOpenModal = async e => {\n  spinModal.classList.add('spinner');\n  if (!e.target.closest('.card-set__item')) {\n    return;\n  }\n\n  refs.modalFilm.innerHTML = '';\n  refs.backdropModalFilm.classList.remove('visually-hidden');\n  refs.body.style.overflow = 'hidden';\n\n  const getFilmId = e.target.closest('.card-set__item').dataset.id;\n\n  const infoAboutModalFilm = await getMovieById(getFilmId);\n\n  renderModalFilm(infoAboutModalFilm);\n\n  const watchedBtn = document.querySelector('.description-button__watched');\n  const queueBtn = document.querySelector('.description-button__queue');\n  changeWatchedButtonCondition(getFilmId, watchedBtn);\n  changeQueueButtonCondition(getFilmId, queueBtn);\n\n  spinModal.classList.remove('spinner');\n\n  refs.body.addEventListener('keydown', onKeyPress);\n  refs.backdropModalFilm.addEventListener('click', onBackdropClick);\n};\n\nconst renderModalFilm = modalFilm => {\n  const {\n    poster_path,\n    title,\n    id,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = modalFilm;\n\n  const genresList = genres.map(item => item.name).join(', ');\n\n  const markupModalFilm = `<div class=\"film-card__image-block\">\n      <img\n        class=\"film-card__image\"\n        src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n        alt=\"film\"\n      />\n    </div>\n    <div class=\"film-card__description\">\n      <h1 class=\"film-card__description-title\">${title}</h1>\n      <ul class=\"film-card__description-set\">\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Vote / Votes</p>\n          <p class=\"description-set__value\">\n            <span class=\"description-set__rating\">${vote_average}</span>\n            <span class=\"description-set__separator\">/</span>\n            <span class=\"description-set__vote\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Popularity</p>\n          <p class=\"description-set__value\">${popularity}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Original Title</p>\n          <p class=\"description-set__value\">${original_title}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Genre</p>\n          <p class=\"description-set__value\">${genresList}</p>\n        </li>\n      </ul>\n      <div class=\"film-card__description-about\">\n        <h2 class=\"description-about__title\">About</h2>\n        <p class=\"description-about__text\">${overview}</p>\n      </div>\n      <div class=\"film-card__description-button\">\n        <button class=\"description-button description-button__watched\" data-id=\"${id}\">\n          add to Watched\n        </button>\n        <button class=\"description-button description-button__queue\" data-id=\"${id}\">\n          add to queue\n        </button>\n      </div>\n    </div>\n  </div>`;\n\n  refs.modalFilm.insertAdjacentHTML('beforeend', markupModalFilm);\n};\n\nconst onKeyPress = e => {\n  if (e.code === 'Escape') {\n    console.log(e.code);\n    refs.backdropModalFilm.classList.add('visually-hidden');\n    refs.body.style.overflow = 'visible';\n    refs.body.removeEventListener('keydown', onKeyPress);\n  }\n};\n\nconst onBackdropClick = e => {\n  if (e.target.closest('.film-card')) {\n    return;\n  }\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n};\n\nrefs.openModalFilm.addEventListener('click', onOpenModal);\n\nrefs.closeModalFilm.addEventListener('click', () => {\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n});\n","const changeWatchedButtonCondition = (filmId, watchedBtn) => {\n  const getWatched = localStorage.getItem('watched');\n  const parsGetWatched = JSON.parse(getWatched);\n\n  if (!parsGetWatched) {\n    return;\n  } else if (parsGetWatched.includes(filmId)) {\n    watchedBtn.textContent = 'in watched';\n    watchedBtn.style.backgroundColor = 'lightgray';\n    watchedBtn.setAttribute('disabled', '');\n  }\n};\n\nconst changeQueueButtonCondition = (filmId, queueBtn) => {\n  const getQueue = localStorage.getItem('queue');\n  const parseGetQueue = JSON.parse(getQueue);\n\n  if (!parseGetQueue) {\n    return;\n  } else if (parseGetQueue.includes(filmId)) {\n    queueBtn.textContent = 'in queue';\n    queueBtn.style.backgroundColor = 'lightgray';\n    queueBtn.setAttribute('disabled', '');\n  }\n};\n\nexport { changeWatchedButtonCondition, changeQueueButtonCondition };\n","const cardBox = document.querySelector('.film-card__box');\ncardBox.addEventListener('click', addWatched);\ncardBox.addEventListener('click', addQueue);\nfunction addWatched(e) {\n  if (!e.target.closest('.description-button__watched')) {\n    return;\n  }\n  const getFilmId = e.target.closest('.description-button__watched').dataset.id;\n  const films = JSON.parse(localStorage.getItem('watched') || '[]');\n  const film = getFilmId;\n\n  if (films.includes(film)) {\n    return;\n  }\n\n  films.push(film);\n  localStorage.setItem('watched', JSON.stringify(films));\n  alert('Ви дадали даний фільм до Watched');\n}\nfunction addQueue(e) {\n  if (!e.target.closest('.description-button__queue')) {\n    return;\n  }\n  const getFilmId = e.target.closest('.description-button__queue').dataset.id;\n  const films = JSON.parse(localStorage.getItem('queue') || '[]');\n  const film = getFilmId;\n\n  if (films.includes(film)) {\n    return;\n  }\n\n  films.push(film);\n  localStorage.setItem('queue', JSON.stringify(films));\n  alert('Ви дадали даний фільм до Queue');\n}\n"],"names":["$epB3k","parcelRequire","$696ffb40b89ad88b$var$cardSet","document","querySelector","$696ffb40b89ad88b$var$spinner","getElementById","async","$696ffb40b89ad88b$export$12335c527465096d","pageNumber","classList","add","genres","getGenreList","error","alert","$696ffb40b89ad88b$var$getGenres","movies","totalPages","results","total_pages","getPopularMovies","$696ffb40b89ad88b$var$getDataAboutPopularMovies","cardsMarkup","map","movie","genre_ids","original_title","id","release_date","title","poster_path","genresMarkup","$696ffb40b89ad88b$export$8d9a840d23167eac","idList","find","genre","name","$696ffb40b89ad88b$var$getGenresById","productionYear","Date","getFullYear","toString","$696ffb40b89ad88b$var$renderMovieCard","join","innerHTML","insertAdjacentHTML","remove","length","$a7e0245fb0110520$var$KEY","$a7e0245fb0110520$export$76bd8a7b840a3729","fetch","then","response","json","data","_success","success","Error","status_message","$a7e0245fb0110520$export$1664b92369554829","searchQuery","$a7e0245fb0110520$export$e05fa48ccab9af8","$a7e0245fb0110520$export$321e906c11f8df73","$1c72f1042fbd7648$var$pageNumber","$1c72f1042fbd7648$var$backwardBtn","$1c72f1042fbd7648$var$forwardBtn","$1c72f1042fbd7648$var$pageNumberList","$1c72f1042fbd7648$var$cardSet","$1c72f1042fbd7648$export$d91c9980e9a24ec2","renderMovies","activateBtn","btnLink","removeAttribute","deactivateBtn","setAttribute","renderStartPageNumberList","style","display","markup","i","renderSmallPageNumberListMarkup","hideFirstPageNumberListElement","hideLastPageNumberListElement","children","firstElementChild","showLastPageNumberListElement","lastElementChild","textContent","String","setNewBtnPageNumbersOnStart","hideStartAndEndPageNumbersForMobile","removeCurrentBtnClass","changeCurrentBtnOnStart","changeCurrentBtnOnEnd","marginRight","showFirstPageNumberListElement","setNewBtnPageNumbers","newPageNumber","setNewBtnPageNumbersOnEnd","window","innerWidth","addEventListener","scrollIntoView","e","target","nodeName","contains","Number","renderEndPageNumberList","$b89ac968f8ae7162$var$refs","openModalFilm","closeModalFilm","body","backdropModalFilm","modalFilm","$b89ac968f8ae7162$var$spinModal","$b89ac968f8ae7162$var$renderModalFilm","vote_average","vote_count","popularity","overview","markupModalFilm","item","$b89ac968f8ae7162$var$onKeyPress","code","console","log","overflow","removeEventListener","$b89ac968f8ae7162$var$onBackdropClick","closest","getFilmId","dataset","infoAboutModalFilm","getMovieById","watchedBtn","queueBtn","$fHPRY","changeWatchedButtonCondition","changeQueueButtonCondition","$b6f31b61c48869a0$export$a1c83784b50cc96","filmId","getWatched","localStorage","getItem","parsGetWatched","JSON","parse","includes","backgroundColor","$b6f31b61c48869a0$export$f5b843a319935072","getQueue","parseGetQueue","$2338c8cd734f85a6$var$cardBox","films","film","push","setItem","stringify"],"version":3,"file":"index.28d09025.js.map"}