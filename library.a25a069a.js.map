{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-55f9bcaccf530107.js","src/library.js","src/js/render-library.js","node_modules/@parcel/runtime-js/lib/runtime-f3e67b2b70a377e8.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1zJhX\\\":\\\"library.a25a069a.js\\\",\\\"bJHJB\\\":\\\"movie.a3f3b783.jpg\\\",\\\"eM9ss\\\":\\\"library.12e4da02.js\\\"}\"));","import * as things from './js/modal-film';\nimport * as elements from './js/localStorage';\nimport * as things from './js/change-button-condition';\nimport * as elem from './js/modal-students';\nimport { showLibraryPage, downloadLibraryPage } from './js/render-library';\n\ndownloadLibraryPage(showLibraryPage);\n","import { getGenresMarkup } from './render-popular-movies';\nimport * as image from '../images/movie.jpg';\n\nconst refs = {\n  cardSet: document.querySelector('.card-set'),\n  showWatchedBtn: document.querySelector('.header-library__button--watched'),\n  showQueueBtn: document.querySelector('.header-library__button--queue'),\n  paginationSet: document.querySelector('.pagination'),\n};\n\nconst watchedSpinner = document.querySelector(\n  '.header-library--watched--spinner'\n);\nconst queueSpinner = document.querySelector('.header-library--queue--spinner');\n\nlet pageCount = 0;\nconst moviesbyPage = 6;\n\nconst getWatchedList = () => {\n  const parsedWatchedMovies = JSON.parse(\n    localStorage.getItem('watched') || '[]'\n  );\n  return parsedWatchedMovies;\n};\n\nconst getQueueList = () => {\n  const parsedQueueMovies = JSON.parse(localStorage.getItem('queue') || '[]');\n  return parsedQueueMovies;\n};\n\nconst getLibraryList = () => {\n  const parsedWatchedMovies = JSON.parse(\n    localStorage.getItem('watched') || '[]'\n  );\n\n  const parsedQueueMovies = JSON.parse(localStorage.getItem('queue') || '[]');\n\n  const parsedAllMoeviesList = [...parsedWatchedMovies, ...parsedQueueMovies];\n  const parsedUniqueMoeviesList = parsedAllMoeviesList.filter(\n    (movie, movieIdx, movies) =>\n      movies.findIndex(item => item.id === movie.id) === movies.indexOf(movie)\n  );\n\n  return parsedUniqueMoeviesList;\n};\n\nconst onShowWatched = () => {\n  watchedSpinner.classList.add('spinner');\n\n  refs.paginationSet.removeEventListener('click', onClickLibrary);\n  refs.paginationSet.removeEventListener('click', onClickQueue);\n\n  const watchedList = getWatchedList();\n\n  const startPageWatched = watchedList.slice(0, moviesbyPage);\n  refs.cardSet.innerHTML = '';\n\n  if (watchedList.length === 0) {\n    const emptyMarkup = `<div class=\"library__empty-container\">\n                          <p class=\"library__empty-text\">Your watched list is empty. Please, add some movies!!!</p>\n                          <img src=\"${image}\" alt=\"Empty library image\" width=\"500\" height=\"500\">\n                        </div>`;\n\n    refs.cardSet.insertAdjacentHTML('afterbegin', emptyMarkup);\n    watchedSpinner.classList.remove('spinner');\n    refs.paginationSet.innerHTML = '';\n    return;\n  }\n\n  getCountPages(watchedList);\n  renderWatched(startPageWatched);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickWatched);\n};\n\nconst onShowQueue = () => {\n  queueSpinner.classList.add('spinner');\n\n  refs.paginationSet.removeEventListener('click', onClickLibrary);\n  refs.paginationSet.removeEventListener('click', onClickWatched);\n\n  const queueList = getQueueList();\n  const startPageQueue = queueList.slice(0, moviesbyPage);\n\n  refs.cardSet.innerHTML = '';\n\n  if (queueList.length === 0) {\n    const emptyMarkup = `<div class=\"library__empty-container\">\n                          <p class=\"library__empty-text\">Your queue list is empty. Please, add some movies!!!</p>\n                          <img src=\"${image}\" alt=\"Empty library image\" width=\"500\" height=\"500\">\n                        </div>`;\n\n    refs.cardSet.insertAdjacentHTML('afterbegin', emptyMarkup);\n    queueSpinner.classList.remove('spinner');\n    refs.paginationSet.innerHTML = '';\n    return;\n  }\n\n  getCountPages(queueList);\n  renderWatched(startPageQueue);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickQueue);\n};\n\nconst showLibraryPage = () => {\n  refs.paginationSet.removeEventListener('click', onClickWatched);\n  refs.paginationSet.removeEventListener('click', onClickQueue);\n\n  const libraryList = getLibraryList();\n\n  const startPageLibrary = libraryList.slice(0, moviesbyPage);\n  refs.cardSet.innerHTML = '';\n\n  if (libraryList.length === 0) {\n    const emptyMarkup = `<div class=\"library__empty-container\">\n                          <p class=\"library__empty-text\">Your library is empty. Please, add some movies!!!</p>\n                          <img src=\"${image}\" alt=\"Empty library image\" width=\"500\" height=\"500\">\n                        </div>`;\n\n    refs.cardSet.insertAdjacentHTML('afterbegin', emptyMarkup);\n    refs.paginationSet.innerHTML = '';\n    return;\n  }\n\n  getCountPages(libraryList);\n  renderWatched(startPageLibrary);\n  markupNumPage(pageCount);\n\n  refs.paginationSet.addEventListener('click', onClickLibrary);\n};\n\nconst renderWatched = parsedMovieFromStorage => {\n  parsedMovieFromStorage.map(renderLibrary);\n};\n\nconst getLibraryGenresById = (idList, genres) => {\n  return idList.map(id => genres.find(genre => genre.id === id).name);\n};\n\nconst renderLibrary = movies => {\n  const {\n    id,\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    genres,\n    vote_average,\n  } = movies;\n\n  const productionYear = new Date(release_date).getFullYear().toString();\n\n  const idList = genres.map(i => (i = i.id));\n\n  const alphabetGenres = getLibraryGenresById(idList, genres);\n\n  const genresMarkup = getGenresMarkup(alphabetGenres);\n\n  const markup = `<li class=\"card-set__item\" data-id=\"${id}\">\n                <div class=\"card-set__box-img\"\">\n                <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${original_title}\"\n                class=\"card-set__img\"\n                />\n                </div>\n                <h3 class=\"card-set__title\">${title}</h3>\n                <div class=\"card-set__description\">\n                <ul class=\"card-set__genre\">\n                    ${genresMarkup}\n                </ul>\n                    <span class=\"card-set__production-year\">&nbsp| ${productionYear}&nbsp</span>\n                    <span class=\"card-set__rating\">${vote_average}</span>\n                </div>\n                </li>`;\n\n  refs.cardSet.insertAdjacentHTML('afterbegin', markup);\n  watchedSpinner.classList.remove('spinner');\n  queueSpinner.classList.remove('spinner');\n};\n\nconst getCountPages = arr => {\n  pageCount = Math.ceil(arr.length / moviesbyPage);\n};\n\nconst downloadLibraryPage = showLibraryPage => {\n  showLibraryPage();\n};\n\nrefs.showWatchedBtn.addEventListener('click', onShowWatched);\nrefs.showQueueBtn.addEventListener('click', onShowQueue);\n\nconst renderByPage = (a, arrayAllMoviesForRender) => {\n  const startPositionForRender = a * moviesbyPage - moviesbyPage;\n\n  const arrayMoviesByPage = arrayAllMoviesForRender.splice(\n    startPositionForRender,\n    moviesbyPage\n  );\n\n  refs.cardSet.innerHTML = '';\n  renderWatched(arrayMoviesByPage);\n  markupNumPage(pageCount);\n\n  const previousBtn = document.querySelector('.pagination__button--current');\n  previousBtn.classList.remove('pagination__button--current');\n  const currentBtn = document.querySelector(`[id=\"${a}\"]`);\n  currentBtn.classList.add('pagination__button--current');\n};\n\nconst onClickWatched = e => {\n  const watched = getWatchedList();\n\n  const getNumberPage = Number(e.target.closest('.pagination__button').id);\n\n  renderByPage(getNumberPage, watched);\n};\n\nconst onClickQueue = e => {\n  const queue = getQueueList();\n\n  const getNumberPage = Number(e.target.closest('.pagination__button').id);\n\n  renderByPage(getNumberPage, queue);\n};\n\nconst onClickLibrary = e => {\n  const library = getLibraryList();\n\n  const getNumberPage = Number(e.target.closest('.pagination__button').id);\n\n  renderByPage(getNumberPage, library);\n};\n\n//====================render pagination for library============\n\nconst markupNumPage = pageCount => {\n  const markupEmpty = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    let page = '';\n\n    if (i === 1) {\n      page = `<li class=\"pagination__item\">\n        <button class=\"pagination__button pagination__button--current\" id=\"${i}\">${i}</button>\n      </li>`;\n    } else {\n      page = `<li class=\"pagination__item\">\n        <button class=\"pagination__button\" id=\"${i}\">${i}</button>\n      </li>`;\n    }\n\n    markupEmpty.push(page);\n  }\n\n  const markup = markupEmpty.join('');\n\n  refs.paginationSet.innerHTML = '';\n  refs.paginationSet.insertAdjacentHTML('afterbegin', markup);\n};\n//==========================================\n\nexport { showLibraryPage, downloadLibraryPage };\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bJHJB\")).toString();"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$93eWd","$8a0e5aa521d56ba0$exports","URL","resolve","import","meta","url","toString","$76d8f5d523e840d5$var$refs","cardSet","document","querySelector","showWatchedBtn","showQueueBtn","paginationSet","$76d8f5d523e840d5$var$watchedSpinner","$76d8f5d523e840d5$var$queueSpinner","$76d8f5d523e840d5$var$pageCount","$76d8f5d523e840d5$var$getWatchedList","localStorage","getItem","$76d8f5d523e840d5$var$getQueueList","$76d8f5d523e840d5$var$getLibraryList","filter","movie","movieIdx","movies","findIndex","item","indexOf","$76d8f5d523e840d5$var$renderWatched","parsedMovieFromStorage","map","$76d8f5d523e840d5$var$renderLibrary","poster_path","original_title","title","release_date","genres","vote_average","productionYear","Date","getFullYear","alphabetGenres","idList","find","genre","name","$76d8f5d523e840d5$var$getLibraryGenresById","markup","getGenresMarkup","insertAdjacentHTML","classList","remove","$76d8f5d523e840d5$var$getCountPages","arr","Math","ceil","addEventListener","add","removeEventListener","$76d8f5d523e840d5$var$onClickLibrary","$76d8f5d523e840d5$var$onClickQueue","watchedList","startPageWatched","slice","innerHTML","emptyMarkup","$76d8f5d523e840d5$var$markupNumPage","$76d8f5d523e840d5$var$onClickWatched","queueList","startPageQueue","$76d8f5d523e840d5$var$renderByPage","a","arrayAllMoviesForRender","startPositionForRender","arrayMoviesByPage","splice","e","watched","getNumberPage","Number","target","closest","queue","library","pageCount1","markupEmpty","page","push","join","libraryList","startPageLibrary","showLibraryPage1"],"version":3,"file":"library.a25a069a.js.map"}