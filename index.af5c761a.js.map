{"mappings":"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","sources":["src/js/Api.js","src/js/change-movies-page.js","src/js/modal-film.js","src/js/change-button-condition.js","src/js/localStorage.js"],"sourcesContent":["const KEY = 'fadee9dfff8cb6b1bff36771479589d6';\n\n/*\nФункцию getPopularMovies() используем для запроса при рендере карточек популярных фильмов на главной странице.\n*/\n\nexport function getPopularMovies(pageNumber = 1) {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=${pageNumber}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMoviesBySearchQuery(searchQuery) используем для запроса при рендере карточек при поиске по ключевому слову.\nПараметр searchQuery должен быть строкой из input-а поиска.\n*/\n\nexport function getSearchQuery(searchQuery, pageNumber = 1) {\n  const url = 'https://api.themoviedb.org/3';\n  return fetch(`${url}/search/movie?api_key=${KEY}&query=${searchQuery}&language=uk&page=${pageNumber}&include_adult=false`)\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nФункцию getMovieById(id) используем для запроса при отображении полной информации о фильме (модалка при клике на карточку).\nПараметр id должен быть строкой или числом. \n*/\n\nexport function getMovieById(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=uk`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n\n/*\nЖанры каждого фильма хранятся в виде массива чисел. Кажое число соответствует своему жанру. \nФункция getGenreList() возвращает массив объектов, свойствами которых есть число и соответствующий ему жанр.\nИспользуем при отображении жанров на карточках и модалке.\n*/\n\nexport function getGenreList() {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${KEY}&language=uk`\n  )\n    .then(response => response.json())\n    .then(data => {\n      if (!(data.success ?? true)) {\n        throw new Error(data.status_message);\n      }\n      return data;\n    });\n}\n","let pageNumber = 1;\n\nconst backwardBtn = document.querySelector('[data-move=\"backward\"]');\nconst forwardBtn = document.querySelector('[data-move=\"forward\"]');\nconst pageNumberList = document.querySelector('.number-page');\nconst cardSet = document.querySelector('.card-set');\n\n/*\n  Функция changeMoviesPage принимает в качестве первого аргумента общее количество страниц, доступных для пагинации, а в качестве второго - функцию для рендера карточек фильмов.\n*/\n\nfunction changeMoviesPage(totalPages, renderMovies) {\n  renderStartPageNumberList(totalPages);\n\n  backwardBtn.addEventListener('click', onBackwardBtnClick);\n  forwardBtn.addEventListener('click', onForwardBtnClick);\n  pageNumberList.addEventListener('click', onPageNumberClick);\n\n  function onForwardBtnClick() {\n    pageNumber += 1;\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    activateBtn(backwardBtn);\n    if (pageNumber === totalPages) {\n      deactivateBtn(forwardBtn);\n    }\n\n    if (pageNumber < 4) {\n      changeCurrentBtnOnStart();\n      return;\n    }\n\n    if (pageNumber > totalPages - 3) {\n      hideLastPageNumberListElement();\n      changeCurrentBtnOnEnd();\n    }\n\n    if (pageNumber >= 4 && pageNumber <= totalPages - 2) {\n      showFirstPageNumberListElement();\n      setNewBtnPageNumbers();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function onBackwardBtnClick() {\n    pageNumber -= 1;\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    activateBtn(forwardBtn);\n    if (pageNumber === 1) {\n      deactivateBtn(backwardBtn);\n    }\n\n    if (pageNumber > totalPages - 3) {\n      changeCurrentBtnOnEnd();\n      return;\n    }\n\n    if (pageNumber < 4) {\n      hideFirstPageNumberListElement();\n      changeCurrentBtnOnStart();\n    }\n\n    if (pageNumber >= 3 && pageNumber <= totalPages - 3) {\n      showLastPageNumberListElement();\n      setNewBtnPageNumbers();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function onPageNumberClick(e) {\n    if (e.target.nodeName !== 'BUTTON') {\n      return;\n    }\n\n    if (e.target.classList.contains('number-page__btn--current')) {\n      return;\n    }\n\n    pageNumber = Number(e.target.textContent);\n    renderMovies(pageNumber);\n    cardSet.scrollIntoView();\n\n    if (pageNumber === 1) {\n      removeCurrentBtnClass();\n      renderStartPageNumberList();\n      return;\n    }\n\n    if (pageNumber === totalPages) {\n      removeCurrentBtnClass();\n      renderEndPageNumberList();\n      return;\n    }\n\n    if (pageNumber >= 4 && pageNumber <= totalPages - 3) {\n      removeCurrentBtnClass();\n      pageNumberList.children[3].firstElementChild.classList.add(\n        'number-page__btn--current'\n      );\n\n      showFirstPageNumberListElement();\n      showLastPageNumberListElement();\n\n      activateBtn(forwardBtn);\n      activateBtn(backwardBtn);\n\n      setNewBtnPageNumbers();\n    }\n\n    if (pageNumber < 4) {\n      changeCurrentBtnOnStart();\n\n      hideFirstPageNumberListElement();\n      if (totalPages > 5) {\n        showLastPageNumberListElement();\n      }\n\n      activateBtn(forwardBtn);\n\n      setNewBtnPageNumbersOnStart();\n      return;\n    }\n\n    if (pageNumber > totalPages - 3) {\n      changeCurrentBtnOnEnd();\n\n      hideLastPageNumberListElement();\n      if (totalPages > 5) {\n        showFirstPageNumberListElement();\n      }\n\n      activateBtn(forwardBtn);\n      activateBtn(backwardBtn);\n\n      setNewBtnPageNumbersOnEnd();\n    }\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function activateBtn(btnLink) {\n    btnLink.removeAttribute('disabled');\n    btnLink.classList.remove('movies-navigation__arrow-btn--disabled');\n  }\n\n  function deactivateBtn(btnLink) {\n    btnLink.setAttribute('disabled', '');\n    btnLink.classList.add('movies-navigation__arrow-btn--disabled');\n  }\n\n  function renderStartPageNumberList() {\n    if (totalPages < 6) {\n      renderSmallPageNumberList();\n      return;\n    }\n\n    hideFirstPageNumberListElement();\n    showLastPageNumberListElement();\n\n    pageNumberList.children[1].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n    pageNumberList.lastElementChild.firstElementChild.textContent =\n      String(totalPages);\n\n    deactivateBtn(backwardBtn);\n    activateBtn(forwardBtn);\n\n    setNewBtnPageNumbersOnStart();\n\n    hideStartAndEndPageNumbersForMobile();\n  }\n\n  function renderEndPageNumberList() {\n    hideLastPageNumberListElement();\n    if (totalPages > 5) {\n      showFirstPageNumberListElement();\n    }\n\n    pageNumberList.children[\n      totalPages >= 5 ? 5 : totalPages\n    ].firstElementChild.classList.add('number-page__btn--current');\n\n    activateBtn(backwardBtn);\n    deactivateBtn(forwardBtn);\n\n    if (totalPages <= 5) {\n      setNewBtnPageNumbersOnStart();\n      return;\n    }\n    setNewBtnPageNumbersOnEnd();\n  }\n\n  function removeCurrentBtnClass() {\n    const currentBtn = document.querySelector('.number-page__btn--current');\n    currentBtn.classList.remove('number-page__btn--current');\n  }\n\n  function changeCurrentBtnOnStart() {\n    removeCurrentBtnClass();\n    pageNumberList.children[pageNumber].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n  }\n\n  function changeCurrentBtnOnEnd() {\n    removeCurrentBtnClass();\n    pageNumberList.children[\n      pageNumber - totalPages + 5\n    ].firstElementChild.classList.add('number-page__btn--current');\n  }\n\n  function renderSmallPageNumberList() {\n    hideArrowBtns();\n    renderSmallPageNumberListMarkup();\n\n    hideFirstPageNumberListElement();\n    hideLastPageNumberListElement();\n\n    pageNumberList.children[1].firstElementChild.classList.add(\n      'number-page__btn--current'\n    );\n  }\n\n  function hideLastPageNumberListElement() {\n    pageNumberList.lastElementChild.style.display = 'none';\n    pageNumberList.children[\n      pageNumberList.children.length - 2\n    ].style.marginRight = '0px';\n  }\n\n  function hideFirstPageNumberListElement() {\n    pageNumberList.firstElementChild.style.display = 'none';\n  }\n\n  function showFirstPageNumberListElement() {\n    pageNumberList.firstElementChild.style.display = 'list-item';\n  }\n\n  function showLastPageNumberListElement() {\n    pageNumberList.lastElementChild.style.display = 'list-item';\n    pageNumberList.children[\n      pageNumberList.children.length - 2\n    ].style.marginRight = '16px';\n  }\n\n  function setNewBtnPageNumbers() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = pageNumber - 3 + i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function setNewBtnPageNumbersOnStart() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function setNewBtnPageNumbersOnEnd() {\n    for (let i = 1; i < pageNumberList.children.length - 1; i += 1) {\n      const newPageNumber = totalPages - 5 + i;\n      pageNumberList.children[i].firstElementChild.textContent =\n        newPageNumber.toString();\n    }\n  }\n\n  function renderSmallPageNumberListMarkup() {\n    let markup = '';\n    pageNumberList.innerHTML = '';\n    for (let i = 0; i < totalPages + 2; i += 1) {\n      markup += `<li class=\"number-page__item\">\n                <button type=\"button\" class=\"number-page__btn\">${i}</button>\n              </li>`;\n    }\n    pageNumberList.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  function hideArrowBtns() {\n    forwardBtn.style.display = 'none';\n    backwardBtn.style.display = 'none';\n  }\n\n  function hideStartAndEndPageNumbersForMobile() {\n    if (window.innerWidth < 768) {\n      hideFirstPageNumberListElement();\n      hideLastPageNumberListElement();\n    }\n  }\n}\n\nexport { changeMoviesPage };\n","import { getMovieById } from './Api';\nimport {\n  changeWatchedButtonCondition,\n  changeQueueButtonCondition,\n} from './change-button-condition';\nimport { parsLoc } from './change-button-condition';\n\nconst refs = {\n  openModalFilm: document.querySelector('.card-set'),\n  closeModalFilm: document.querySelector('.film-card__button-close'),\n  body: document.querySelector('body'),\n  backdropModalFilm: document.querySelector('.backdrop'),\n  modalFilm: document.querySelector('.film-card__box'),\n};\nconst spinModal = document.querySelector('.spinner--modal');\n\nconst onOpenModal = async e => {\n  spinModal.classList.add('spinner');\n  if (!e.target.closest('.card-set__item')) {\n    return;\n  }\n\n  refs.modalFilm.innerHTML = '';\n  refs.backdropModalFilm.classList.remove('visually-hidden');\n  refs.body.style.overflow = 'hidden';\n\n  const getFilmId = e.target.closest('.card-set__item').dataset.id;\n\n  const infoAboutModalFilm = await getMovieById(getFilmId);\n\n  renderModalFilm(infoAboutModalFilm);\n\n  const watchedBtn = document.querySelector('.description-button__watched');\n  const queueBtn = document.querySelector('.description-button__queue');\n  changeWatchedButtonCondition(getFilmId, watchedBtn);\n  changeQueueButtonCondition(getFilmId, queueBtn);\n\n  spinModal.classList.remove('spinner');\n\n  refs.body.addEventListener('keydown', onKeyPress);\n  refs.backdropModalFilm.addEventListener('click', onBackdropClick);\n};\n\nconst renderModalFilm = modalFilm => {\n  const {\n    poster_path,\n    title,\n    id,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = modalFilm;\n\n  const genresList = genres.map(item => item.name).join(', ');\n\n  const markupModalFilm = `<div class=\"film-card__image-block\">\n      <img\n        class=\"film-card__image\"\n        src=\"https://image.tmdb.org/t/p/original${poster_path}\"\n        alt=\"film\"\n      />\n    </div>\n    <div class=\"film-card__description\">\n      <h1 class=\"film-card__description-title\">${title}</h1>\n      <ul class=\"film-card__description-set\">\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Vote / Votes</p>\n          <p class=\"description-set__value\">\n            <span class=\"description-set__rating\">${vote_average}</span>\n            <span class=\"description-set__separator\">/</span>\n            <span class=\"description-set__vote\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Popularity</p>\n          <p class=\"description-set__value\">${popularity}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Original Title</p>\n          <p class=\"description-set__value\">${original_title}</p>\n        </li>\n        <li class=\"description-set\">\n          <p class=\"description-set__text\">Genre</p>\n          <p class=\"description-set__value\">${genresList}</p>\n        </li>\n      </ul>\n      <div class=\"film-card__description-about\">\n        <h2 class=\"description-about__title\">About</h2>\n        <p class=\"description-about__text\">${overview}</p>\n      </div>\n      <div class=\"film-card__description-button\">\n        <button class=\"description-button description-button__watched\" data-id=\"${id}\">\n          add to Watched\n        </button>\n        <button class=\"description-button description-button__queue\" data-id=\"${id}\">\n          add to queue\n        </button>\n      </div>\n    </div>\n  </div>`;\n\n  refs.modalFilm.insertAdjacentHTML('beforeend', markupModalFilm);\n};\n\nconst onKeyPress = e => {\n  if (e.code === 'Escape') {\n    console.log(e.code);\n    refs.backdropModalFilm.classList.add('visually-hidden');\n    refs.body.style.overflow = 'visible';\n    refs.body.removeEventListener('keydown', onKeyPress);\n  }\n};\n\nconst onBackdropClick = e => {\n  if (e.target.closest('.film-card')) {\n    return;\n  }\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n};\n\nrefs.openModalFilm.addEventListener('click', onOpenModal);\n\nrefs.closeModalFilm.addEventListener('click', () => {\n  refs.backdropModalFilm.classList.add('visually-hidden');\n  refs.body.style.overflow = 'visible';\n});\n","const changeWatchedButtonCondition = (filmId, watchedBtn) => {\n  const getWatched = localStorage.getItem('watched');\n  const parsGetWatched = JSON.parse(getWatched);\n\n  if (!parsGetWatched) {\n    return;\n  } else if (parsGetWatched.includes(filmId)) {\n    watchedBtn.textContent = 'in watched';\n    watchedBtn.style.backgroundColor = 'lightgray';\n    watchedBtn.setAttribute('disabled', '');\n  }\n};\n\nconst changeQueueButtonCondition = (filmId, queueBtn) => {\n  const getQueue = localStorage.getItem('queue');\n  const parseGetQueue = JSON.parse(getQueue);\n\n  if (!parseGetQueue) {\n    return;\n  } else if (parseGetQueue.includes(filmId)) {\n    queueBtn.textContent = 'in queue';\n    queueBtn.style.backgroundColor = 'lightgray';\n    queueBtn.setAttribute('disabled', '');\n  }\n};\n\nexport { changeWatchedButtonCondition, changeQueueButtonCondition };\n","const cardBox = document.querySelector('.film-card__box');\ncardBox.addEventListener('click', addWatched);\ncardBox.addEventListener('click', addQueue);\nfunction addWatched(e) {\n  if (!e.target.closest('.description-button__watched')) {\n    return;\n  }\n  const getFilmId = e.target.closest('.description-button__watched').dataset.id;\n  const films = JSON.parse(localStorage.getItem('watched') || '[]');\n  const film = getFilmId;\n\n  if (films.includes(film)) {\n    return;\n  }\n\n  films.push(film);\n  localStorage.setItem('watched', JSON.stringify(films));\n  alert('Ви дадали даний фільм до Watched');\n}\nfunction addQueue(e) {\n  if (!e.target.closest('.description-button__queue')) {\n    return;\n  }\n  const getFilmId = e.target.closest('.description-button__queue').dataset.id;\n  const films = JSON.parse(localStorage.getItem('queue') || '[]');\n  const film = getFilmId;\n\n  if (films.includes(film)) {\n    return;\n  }\n\n  films.push(film);\n  localStorage.setItem('queue', JSON.stringify(films));\n  alert('Ви дадали даний фільм до Queue');\n}\n"],"names":["$a7e0245fb0110520$var$KEY","$a7e0245fb0110520$export$76bd8a7b840a3729","pageNumber","fetch","then","response","json","data","_success","success","Error","status_message","$a7e0245fb0110520$export$1664b92369554829","searchQuery","$a7e0245fb0110520$export$e05fa48ccab9af8","id","$a7e0245fb0110520$export$321e906c11f8df73","$1c72f1042fbd7648$var$pageNumber","$1c72f1042fbd7648$var$backwardBtn","document","querySelector","$1c72f1042fbd7648$var$forwardBtn","$1c72f1042fbd7648$var$pageNumberList","$1c72f1042fbd7648$var$cardSet","$1c72f1042fbd7648$export$d91c9980e9a24ec2","totalPages","renderMovies","activateBtn","btnLink","removeAttribute","classList","remove","deactivateBtn","setAttribute","add","renderStartPageNumberList","style","display","markup","innerHTML","i","insertAdjacentHTML","renderSmallPageNumberListMarkup","hideFirstPageNumberListElement","hideLastPageNumberListElement","children","firstElementChild","showLastPageNumberListElement","lastElementChild","textContent","String","setNewBtnPageNumbersOnStart","hideStartAndEndPageNumbersForMobile","removeCurrentBtnClass","changeCurrentBtnOnStart","changeCurrentBtnOnEnd","length","marginRight","showFirstPageNumberListElement","setNewBtnPageNumbers","newPageNumber","toString","setNewBtnPageNumbersOnEnd","window","innerWidth","addEventListener","scrollIntoView","e","target","nodeName","contains","Number","renderEndPageNumberList","$epB3k","parcelRequire","$b89ac968f8ae7162$var$refs","openModalFilm","closeModalFilm","body","backdropModalFilm","modalFilm","$b89ac968f8ae7162$var$spinModal","$b89ac968f8ae7162$var$renderModalFilm","poster_path","title","vote_average","vote_count","popularity","original_title","genres","overview","markupModalFilm","map","item","name","join","$b89ac968f8ae7162$var$onKeyPress","code","console","log","overflow","removeEventListener","$b89ac968f8ae7162$var$onBackdropClick","closest","async","getFilmId","dataset","infoAboutModalFilm","getMovieById","watchedBtn","queueBtn","$fHPRY","changeWatchedButtonCondition","changeQueueButtonCondition","$b6f31b61c48869a0$export$a1c83784b50cc96","filmId","getWatched","localStorage","getItem","parsGetWatched","JSON","parse","includes","backgroundColor","$b6f31b61c48869a0$export$f5b843a319935072","getQueue","parseGetQueue","$2338c8cd734f85a6$var$cardBox","films","film","push","setItem","stringify","alert"],"version":3,"file":"index.af5c761a.js.map"}